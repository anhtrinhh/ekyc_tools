var __EkycToolsLibrary__;(()=>{var e={982:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var n=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))break e;n=n[o]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}s("Symbol",(function(e){function t(e,t){this.g=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<n.length;s++){var i=a[n[s]];"function"==typeof i&&"function"!=typeof i.prototype[e]&&r(i.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e}));var l,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var p;e:{var h={};try{h.__proto__={a:!0},p=h.a;break e}catch(e){}p=!1}l=p?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var d=l;function m(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,d)d(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.na=t.prototype}function f(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={da:t,ea:!0},e.g=e.o||e.u}function b(e,t,n){return e.g=n,{value:t}}function w(e){this.g=new f,this.h=e}function v(e,t,n,r){try{var a=t.call(e.g.i,n);if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.g.l=!1,a;var s=a.value}catch(t){return e.g.i=null,y(e.g,t),x(e)}return e.g.i=null,r.call(e.g,s),x(e)}function x(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.ea)throw t.da;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function N(e){this.next=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.next,t,e.g.s):(e.g.s(t),t=x(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.throw,t,e.g.s):(y(e.g,t),t=x(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?v(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),x(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(r,a){!function e(s){s.done?r(s.value):Promise.resolve(s.value).then(t,n).then(e,a)}(e.next())}))}(new N(new w(e)))}f.prototype.s=function(e){this.h=e},f.prototype.return=function(e){this.j={return:e},this.g=this.u},s("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.s=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var s=a.setTimeout;n.prototype.i=function(e){s(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.D),reject:e(this.l)}},t.prototype.D=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.H(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.A(e):this.o(e)}},t.prototype.A=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.I(t,e):this.o(e)},t.prototype.l=function(e){this.u(2,e)},t.prototype.o=function(e){this.u(1,e)},t.prototype.u=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.G(),this.B()},t.prototype.G=function(){var e=this;s((function(){if(e.C()){var t=a.console;void 0!==t&&t.error(e.i)}}),1)},t.prototype.C=function(){if(this.s)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.B=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)o.h(this.g[e]);this.g=null}};var o=new n;return t.prototype.H=function(e){var t=this.j();e.M(t.resolve,t.reject)},t.prototype.I=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){s(e)}}:t}var a,s,o=new t((function(e,t){a=e,s=t}));return this.M(r(e,a),r(n,s)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.M=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.s=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var a=i(e),s=a.next();!s.done;s=a.next())r(s.value).M(t,n)}))},t.all=function(e){var n=i(e),a=n.next();return a.done?r([]):new t((function(e,t){function s(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,r(a.value).M(s(o.length-1),t),a=n.next()}while(!a.done)}))},t}));var T="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};s("Object.assign",(function(e){return e||T})),s("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),s("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}})),s("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),s("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}};return a[Symbol.iterator]=function(){return a},a}(this,(function(e){return e}))}}));var k=this||self;function E(e,t){e=e.split(".");var n,r=k;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function _(){throw Error("Invalid UTF8")}function A(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var I,M,O="undefined"!=typeof TextDecoder,D="undefined"!=typeof TextEncoder,C={},$=null;function F(e){var t;void 0===t&&(t=0),B(),t=C[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,s=0;a<e.length-2;a+=3){var o=e[a],i=e[a+1],u=e[a+2],l=t[o>>2];o=t[(3&o)<<4|i>>4],i=t[(15&i)<<2|u>>6],u=t[63&u],n[s++]=l+o+i+u}switch(l=0,u=r,e.length-a){case 2:u=t[(15&(l=e[a+1]))<<2]||r;case 1:e=e[a],n[s]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}function R(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=$[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}B();for(var r=0;;){var a=n(-1),s=n(0),o=n(64),i=n(64);if(64===i&&-1===a)break;t(a<<2|s>>4),64!=o&&(t(s<<4&240|o>>2),64!=i&&t(o<<6&192|i))}}(e,(function(e){r[a++]=e})),a!==n?r.subarray(0,a):r}function B(){if(!$){$={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));C[n]=r;for(var a=0;a<r.length;a++){var s=r[a];void 0===$[s]&&($[s]=a)}}}}var L,z="function"==typeof Uint8Array;function P(e){return z&&null!=e&&e instanceof Uint8Array}function V(e){if(this.L=e,null!==e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}var U="function"==typeof Uint8Array.prototype.slice,j=0;function W(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function q(){return Error("Failed to read varint, encoding is invalid.")}function H(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.v=t,e&&K(this,e)}function K(e,t){e.h=function(e,t){if(e.constructor===Uint8Array)return e;if(e.constructor===ArrayBuffer)return new Uint8Array(e);if(e.constructor===Array)return new Uint8Array(e);if(e.constructor===String)return R(e);if(e.constructor===V)return!t&&(t=e.L)&&t.constructor===Uint8Array?t:(t=null==(t=e.L)||P(t)?t:"string"==typeof t?R(t):null,(e=e.L=t)?new Uint8Array(e):L||(L=new Uint8Array(0)));if(e instanceof Uint8Array)return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(t,e.v),e.j=0,e.i=e.h.length,e.g=e.j}function G(e){if(e.g>e.i)throw Error("Tried to read past the end of the data "+e.g+" > "+e.i)}function Y(e){var t=e.h,n=t[e.g],r=127&n;if(128>n)return e.g+=1,G(e),r;if(r|=(127&(n=t[e.g+1]))<<7,128>n)return e.g+=2,G(e),r;if(r|=(127&(n=t[e.g+2]))<<14,128>n)return e.g+=3,G(e),r;if(r|=(127&(n=t[e.g+3]))<<21,128>n)return e.g+=4,G(e),r;if(n=t[e.g+4],e.g+=5,r|=(15&n)<<28,128>n)return G(e),r;if(128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++])throw q();return G(e),r}H.prototype.reset=function(){this.g=this.j};var X=[];function J(){this.g=[]}function Z(e,t){for(;127<t;)e.g.push(127&t|128),t>>>=7;e.g.push(t)}function Q(e){var t={},n=void 0!==t.W&&t.W;this.l={v:void 0!==t.v&&t.v},this.W=n,t=this.l,X.length?(n=X.pop(),t&&(n.v=t.v),e&&K(n,e),e=n):e=new H(e,t),this.g=e,this.j=this.g.g,this.h=this.i=-1}function ee(e){var t=e.g;if(t.g==t.i)return!1;e.j=e.g.g;var n=Y(e.g)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw W(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.i=t,e.h=n,!0}function te(e){switch(e.h){case 0:if(0!=e.h)te(e);else e:{for(var t=(e=e.g).g,n=t+10;t<n;)if(0==(128&e.h[t++])){e.g=t,G(e);break e}throw q()}break;case 1:(e=e.g).g+=8,G(e);break;case 2:2!=e.h?te(e):(t=Y(e.g)>>>0,(e=e.g).g+=t,G(e));break;case 5:(e=e.g).g+=4,G(e);break;case 3:for(t=e.i;;){if(!ee(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.h){if(e.i!=t)throw Error("Unmatched end-group tag");break}te(e)}break;default:throw W(e.h,e.j)}}J.prototype.length=function(){return this.g.length},J.prototype.end=function(){var e=this.g;return this.g=[],e},Q.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var ne=[];function re(){this.i=[],this.h=0,this.g=new J}function ae(e,t){0!==t.length&&(e.i.push(t),e.h+=t.length)}var se="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol(void 0):void 0;function oe(e,t){Object.isFrozen(e)||(se?e[se]|=t:void 0!==e.N?e.N|=t:Object.defineProperties(e,{N:{value:t,configurable:!0,writable:!0,enumerable:!1}}))}function ie(e){var t;return null==(t=se?e[se]:e.N)?0:t}function ue(e){return oe(e,1),e}function le(e){return!!Array.isArray(e)&&!!(2&ie(e))}function ce(e){if(!Array.isArray(e))throw Error("cannot mark non-array as immutable");oe(e,2)}function pe(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var he=Object.freeze(ue([]));function de(e){if(le(e.m))throw Error("Cannot mutate an immutable Message")}var me,fe="undefined"!=typeof Symbol&&void 0!==Symbol.hasInstance;function ge(e){return{value:e,configurable:!1,writable:!1,enumerable:!1}}function ye(e,t,n){return-1===t?null:t>=e.i?e.g?e.g[t]:void 0:void 0!==n&&n&&e.g&&null!=(n=e.g[t])?n:e.m[t+e.h]}function be(e,t,n,r){r=void 0!==r&&r,de(e),t<e.i&&!r?e.m[t+e.h]=n:(e.g||(e.g=e.m[e.i+e.h]={}))[t]=n}function we(e,t,n,r){n=void 0===n||n;var a=ye(e,t,r=void 0!==r&&r);return null==a&&(a=he),le(e.m)?n&&(ce(a),Object.freeze(a)):(a===he||le(a))&&be(e,t,a=ue(a.slice()),r),a}function ve(e,t,n){return null==(e=null==(e=ye(e,t))?e:+e)?void 0===n?0:n:e}function xe(e,t,n,r){e.j||(e.j={});var a=le(e.m),s=e.j[n];if(!s){r=we(e,n,!0,void 0!==r&&r),s=[],a=a||le(r);for(var o=0;o<r.length;o++)s[o]=new t(r[o]),a&&ce(s[o].m);a&&(ce(s),Object.freeze(s)),e.j[n]=s}return s}function Ne(e,t,n,r,a){var s=void 0!==s&&s;return de(e),s=xe(e,n,t,s),n=r||new n,e=we(e,t),null!=a?(s.splice(a,0,n),e.splice(a,0,n.m)):(s.push(n),e.push(n.m)),n}function Se(e,t){return null==(e=ye(e,t))?0:e}function Te(e,t){return null==(e=ye(e,t))?"":e}function ke(e){return _e(e,void 0===Ae?Ie:Ae)}function Ee(e,t){if(null!=e){if(Array.isArray(e))e=_e(e,t);else if(pe(e)){var n,r={};for(n in e)r[n]=Ee(e[n],t);e=r}else e=t(e);return e}}function _e(e,t){for(var n=e.slice(),r=0;r<n.length;r++)n[r]=Ee(n[r],t);return Array.isArray(e)&&1&ie(e)&&ue(n),n}function Ae(e){return e&&"object"==typeof e&&e.toJSON?e.toJSON():(e=function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e&&!Array.isArray(e)){if(P(e))return F(e);if(e instanceof V){var t=e.L;return t=null==t||"string"==typeof t?t:z&&t instanceof Uint8Array?F(t):null,(e.L=t)||""}}}return e}(e),Array.isArray(e)?ke(e):e)}function Ie(e){return P(e)?new Uint8Array(e):e}function Me(e,t,n){e||(e=me),me=null;var r=this.constructor.h;if(e||(e=r?[r]:[]),this.h=(r?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=e,e=(r=this.m.length)-1,r&&pe(r=this.m[e])?(this.i=e-this.h,this.g=r):void 0!==t&&-1<t?(this.i=Math.max(t,e+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,n)for(t=0;t<n.length;t++)if((e=n[t])<this.i)e+=this.h,(r=this.m[e])?Array.isArray(r)&&ue(r):this.m[e]=he;else{var a=(r=this.g||(this.g=this.m[this.i+this.h]={}))[e];a?Array.isArray(a)&&ue(a):r[e]=he}}function Oe(){Me.apply(this,arguments)}if(Me.prototype.toJSON=function(){return ke(this.m)},Me.prototype.toString=function(){return this.m.toString()},m(Oe,Me),fe){var De={};Object.defineProperties(Oe,(De[Symbol.hasInstance]=ge((function(){throw Error("Cannot perform instanceof checks for MutableMessage")})),De))}function Ce(e,t,n){if(n){var r,a={};for(r in n){var s=n[r],o=s.ha;o||(a.F=s.la||s.fa.P,s.aa?(a.U=Pe(s.aa),o=function(e){return function(t,n,r){return e.F(t,n,r,e.U)}}(a)):s.ca?(a.T=Ve(s.X.g,s.ca),o=function(e){return function(t,n,r){return e.F(t,n,r,e.T)}}(a)):o=a.F,s.ha=o),o(t,e,s.X),a={F:a.F,U:a.U,T:a.T}}}!function(e,t){if(t=t.ba){ae(e,e.g.end());for(var n=0;n<t.length;n++)ae(e,t[n])}}(t,e)}var $e=Symbol();function Fe(e,t,n){return e[$e]||(e[$e]=function(e,r){return t(e,r,n)})}function Re(e){var t=e[$e];if(!t){var n=Qe(e);t=function(e,t){return et(e,t,n)},e[$e]=t}return t}function Be(e){var t=function(e){var t=e.aa;return t?Re(t):(t=e.ka)?Fe(e.X.g,t,e.ca):void 0}(e),n=e.X,r=e.fa.O;return t?function(e,a){return r(e,a,n,t)}:function(e,t){return r(e,t,n)}}function Le(e,t,n,r,a,s){var o=0;for((e=e()).length&&"number"!=typeof e[0]&&(n(t,e[0]),o++);o<e.length;){n=e[o++];for(var i=o+1;i<e.length&&"number"!=typeof e[i];)i++;var u=e[o++];switch(i-=o){case 0:r(t,n,u);break;case 1:r(t,n,u,e[o++]);break;case 2:a(t,n,u,e[o++],e[o++]);break;case 3:i=e[o++];var l=e[o++],c=e[o++];Array.isArray(c)?a(t,n,u,i,l,c):s(t,n,u,i,l,c);break;case 4:s(t,n,u,e[o++],e[o++],e[o++],e[o++]);break;default:throw Error("unexpected number of binary field arguments: "+i)}}return t}var ze=Symbol();function Pe(e){var t=e[ze];if(!t){var n=Ke(e);t=function(e,t){return nt(e,t,n)},e[ze]=t}return t}function Ve(e,t){var n=e[ze];return n||(n=function(e,n){return Ce(e,n,t)},e[ze]=n),n}var Ue=Symbol();function je(e,t){e.push(t)}function We(e,t,n){e.push(t,n.P)}function qe(e,t,n,r,a){var s=Pe(a),o=n.P;e.push(t,(function(e,t,n){return o(e,t,n,r,s)}))}function He(e,t,n,r,a,s){var o=Ve(r,s),i=n.P;e.push(t,(function(e,t,n){return i(e,t,n,r,o)}))}function Ke(e){return e[Ue]||Le(e,e[Ue]=[],je,We,qe,He)}var Ge=Symbol();function Ye(e,t){e[0]=t}function Xe(e,t,n,r){var a=n.O;e[t]=r?function(e,t,n){return a(e,t,n,r)}:a}function Je(e,t,n,r,a,s){var o=n.O,i=Re(a);e[t]=function(e,t,n){return o(e,t,n,r,i,s)}}function Ze(e,t,n,r,a,s,o){var i=n.O,u=Fe(r,a,s);e[t]=function(e,t,n){return i(e,t,n,r,u,o)}}function Qe(e){return e[Ge]||Le(e,e[Ge]={},Ye,Xe,Je,Ze)}function et(e,t,n){for(;ee(t)&&4!=t.h;){var r=t.i,a=n[r];if(!a){var s=n[0];s&&(s=s[r])&&(a=n[r]=Be(s))}if(!(a&&a(t,e,r)||(a=t,r=e,s=a.j,te(a),a.W))){var o=a.g.h;a=s===(a=a.g.g)?L||(L=new Uint8Array(0)):U?o.slice(s,a):new Uint8Array(o.subarray(s,a)),(s=r.ba)?s.push(a):r.ba=[a]}}return e}function tt(e,t,n){if(ne.length){var r=ne.pop();e&&(K(r.g,e),r.i=-1,r.h=-1),e=r}else e=new Q(e);try{return et(new t,e,Qe(n))}finally{(t=e.g).h=null,t.j=0,t.i=0,t.g=0,t.v=!1,e.i=-1,e.h=-1,100>ne.length&&ne.push(e)}}function nt(e,t,n){for(var r=n.length,a=1==r%2,s=a?1:0;s<r;s+=2)(0,n[s+1])(t,e,n[s]);Ce(e,t,a?n[0]:void 0)}function rt(e,t){var n=new re;nt(e,n,Ke(t)),ae(n,n.g.end()),e=new Uint8Array(n.h);for(var r=(t=n.i).length,a=0,s=0;s<r;s++){var o=t[s];e.set(o,a),a+=o.length}return n.i=[e],e}function at(e,t){return{O:e,P:t}}var st=at((function(e,t,n){if(5!==e.h)return!1;var r=(e=e.g).h[e.g],a=e.h[e.g+1],s=e.h[e.g+2],o=e.h[e.g+3];return e.g+=4,G(e),e=2*((a=(r<<0|a<<8|s<<16|o<<24)>>>0)>>31)+1,r=a>>>23&255,a&=8388607,be(t,n,255==r?a?NaN:1/0*e:0==r?e*Math.pow(2,-149)*a:e*Math.pow(2,r-150)*(a+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=ye(t,n))){Z(e.g,8*n+5),e=e.g;var r=t;0===(r=(n=0>r?1:0)?-r:r)?j=0<1/r?0:2147483648:isNaN(r)?j=2147483647:34028234663852886e22<r?j=(n<<31|2139095040)>>>0:11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),j=(n<<31|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,j=(n<<31|t+127<<23|8388607&r)>>>0),n=j,e.g.push(n>>>0&255),e.g.push(n>>>8&255),e.g.push(n>>>16&255),e.g.push(n>>>24&255)}})),ot=at((function(e,t,n){if(0!==e.h)return!1;for(var r=e.g,a=128,s=0,o=e=0;4>o&&128<=a;o++)a=r.h[r.g++],G(r),s|=(127&a)<<7*o;if(128<=a&&(a=r.h[r.g++],G(r),s|=(127&a)<<28,e|=(127&a)>>4),128<=a)for(o=0;5>o&&128<=a;o++)a=r.h[r.g++],G(r),e|=(127&a)<<7*o+3;if(!(128>a))throw q();return r=s>>>0,(e=2147483648&(a=e>>>0))&&(a=~a>>>0,0==(r=1+~r>>>0)&&(a=a+1>>>0)),r=4294967296*a+(r>>>0),be(t,n,e?-r:r),!0}),(function(e,t,n){if(null!=(t=ye(t,n))&&null!=t){Z(e.g,8*n),e=e.g;var r=t;for(n=0>r,t=(r=Math.abs(r))>>>0,r=Math.floor((r-t)/4294967296),r>>>=0,n&&(r=~r>>>0,4294967295<(t=1+(~t>>>0))&&(t=0,4294967295<++r&&(r=0))),n=j=t,t=r;0<t||127<n;)e.g.push(127&n|128),n=(n>>>7|t<<25)>>>0,t>>>=7;e.g.push(n)}})),it=at((function(e,t,n){return 0===e.h&&(be(t,n,Y(e.g)),!0)}),(function(e,t,n){if(null!=(t=ye(t,n))&&null!=t)if(Z(e.g,8*n),e=e.g,0<=(n=t))Z(e,n);else{for(t=0;9>t;t++)e.g.push(127&n|128),n>>=7;e.g.push(1)}})),ut=at((function(e,t,n){if(2!==e.h)return!1;var r,a=Y(e.g)>>>0,s=(e=e.g).g;if(e.g+=a,G(e),e=e.h,O)(r=I)||(r=I=new TextDecoder("utf-8",{fatal:!0})),r=r.decode(e.subarray(s,s+a));else{a=s+a;for(var o,i,u,l=[],c=null;s<a;)128>(o=e[s++])?l.push(o):224>o?s>=a?_():(i=e[s++],194>o||128!=(192&i)?(s--,_()):l.push((31&o)<<6|63&i)):240>o?s>=a-1?_():128!=(192&(i=e[s++]))||224===o&&160>i||237===o&&160<=i||128!=(192&(r=e[s++]))?(s--,_()):l.push((15&o)<<12|(63&i)<<6|63&r):244>=o?s>=a-2?_():128!=(192&(i=e[s++]))||0!=i-144+(o<<28)>>30||128!=(192&(r=e[s++]))||128!=(192&(u=e[s++]))?(s--,_()):(o=(7&o)<<18|(63&i)<<12|(63&r)<<6|63&u,o-=65536,l.push(55296+(o>>10&1023),56320+(1023&o))):_(),8192<=l.length&&(c=A(c,l),l.length=0);r=A(c,l)}return be(t,n,r),!0}),(function(e,t,n){if(null!=(t=ye(t,n))){var r=!1;if(r=void 0!==r&&r,D){if(r&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(M||(M=new TextEncoder)).encode(t)}else{for(var a=0,s=new Uint8Array(3*t.length),o=0;o<t.length;o++){var i=t.charCodeAt(o);if(128>i)s[a++]=i;else{if(2048>i)s[a++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&o<t.length){var u=t.charCodeAt(++o);if(56320<=u&&57343>=u){i=1024*(i-55296)+u-56320+65536,s[a++]=i>>18|240,s[a++]=i>>12&63|128,s[a++]=i>>6&63|128,s[a++]=63&i|128;continue}o--}if(r)throw Error("Found an unpaired surrogate");i=65533}s[a++]=i>>12|224,s[a++]=i>>6&63|128}s[a++]=63&i|128}}t=s.subarray(0,a)}Z(e.g,8*n+2),Z(e.g,t.length),ae(e,e.g.end()),ae(e,t)}})),lt=at((function(e,t,n,r,a){if(2!==e.h)return!1;t=Ne(t,n,r),n=e.g.i,r=Y(e.g)>>>0;var s=e.g.g+r,o=s-n;if(0>=o&&(e.g.i=s,a(t,e),o=s-e.g.g),o)throw Error("Message parsing ended unexpectedly. Expected to read "+r+" bytes, instead read "+(r-o)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=s,e.g.i=n,!0}),(function(e,t,n,r,a){if(null!=(t=xe(t,r,n)))for(r=0;r<t.length;r++){var s=e;Z(s.g,8*n+2);var o=s.g.end();ae(s,o),o.push(s.h),s=o,a(t[r],e),o=e;var i=s.pop();for(i=o.h+o.g.length()-i;127<i;)s.push(127&i|128),i>>>=7,o.h++;s.push(i),o.h++}}));function ct(){Oe.apply(this,arguments)}if(m(ct,Oe),fe){var pt={};Object.defineProperties(ct,(pt[Symbol.hasInstance]=ge(Object[Symbol.hasInstance]),pt))}function ht(e){ct.call(this,e)}function dt(){return[1,it,2,st,3,ut,4,ut]}function mt(e){ct.call(this,e,-1,gt)}function ft(){return[1,lt,ht,dt]}m(ht,ct),m(mt,ct),mt.prototype.addClassification=function(e,t){return Ne(this,1,ht,e,t),this};var gt=[1];function yt(e){ct.call(this,e)}function bt(){return[1,st,2,st,3,st,4,st,5,st]}function wt(e){ct.call(this,e,-1,xt)}function vt(){return[1,lt,yt,bt]}m(yt,ct),m(wt,ct);var xt=[1];function Nt(e){ct.call(this,e)}function St(){return[1,st,2,st,3,st,4,st,5,st,6,ot]}m(Nt,ct);var Tt=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],kt=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Et=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],_t=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],At=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],It=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Mt=[].concat(u(Tt),u(kt),u(Et),u(_t),u(At),u(It));function Ot(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function Dt(e){return xe(e,ht,1).map((function(e){return{index:Se(e,1),ga:ve(e,2),label:null!=ye(e,3)?Te(e,3):void 0,displayName:null!=ye(e,4)?Te(e,4):void 0}}))}function Ct(e){return{x:ve(e,1),y:ve(e,2),z:ve(e,3),visibility:null!=ye(e,4)?ve(e,4):void 0}}function $t(e,t){this.h=e,this.g=t,this.l=0}function Ft(e,t,n){return function(e,t){var n=e.g;if(void 0===e.o){var r=Ot(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=Ot(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,r),n.attachShader(s,a),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));r=e.o=s,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.j={K:n.getAttribLocation(r,"aVertex"),J:n.getAttribLocation(r,"aTex"),ma:a},e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.j.K),n.vertexAttribPointer(e.j.K,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.J),n.vertexAttribPointer(e.j.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.j,n.useProgram(e.o),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.K),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(r.K,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.J,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.K),n.disableVertexAttribArray(r.J),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function Rt(e){this.g=e}var Bt=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Lt(e,t){return t+e}function zt(e,t){window[e]=t}function Pt(e){if(this.g=e,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=e&&e.locateFile||Lt,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function Vt(e,t){var n,r;return S((function(a){return t in e.H?a.return(e.H[t]):(n=e.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),e.H[t]=r,a.return(r))}))}function Ut(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),a=new e.h.StringList,s=i(t.wants),o=s.next();!o.done;o=s.next())a.push_back(o.value);s=e.h.PacketListener.implement({onResults:function(a){for(var s={},o=0;o<t.wants.length;++o)s[r[o]]=a.get(o);var u=e.listeners[n];u&&(e.D=function(e,t,n){var r,a,s,o,u,l,c,p,h,d,m,f,g,y;return S((function(w){switch(w.g){case 1:if(!n)return w.return(t);for(r={},a=0,s=i(Object.keys(n)),o=s.next();!o.done;o=s.next())u=o.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++a;1<a&&(e.I=!1),c=i(Object.keys(n)),o=c.next();case 2:if(o.done){w.g=4;break}if(p=o.value,"string"==typeof(h=n[p]))return g=r,y=p,b(w,function(e,t,n){var r;return S((function(a){return"number"==typeof n||n instanceof Uint8Array||n instanceof e.h.Uint8BlobList?a.return(n):n instanceof e.h.Texture2dDataOut?((r=e.u[t])||(r=new $t(e.h,e.G),e.u[t]=r),a.return(Ft(r,n,e.I))):a.return(void 0)}))}(e,p,t[h]),14);if(d=t[h.stream],"detection_list"===h.type){if(d){for(var v=d.getRectList(),x=d.getLandmarksList(),N=d.getClassificationsList(),T=[],k=0;k<v.size();++k){var E=tt(v.get(k),Nt,St);E={boundingBox:{xCenter:ve(E,1),yCenter:ve(E,2),height:ve(E,3),width:ve(E,4),rotation:ve(E,5,0),rectId:Se(E,6)},landmarks:xe(tt(x.get(k),wt,vt),yt,1).map(Ct),V:Dt(tt(N.get(k),mt,ft))},T.push(E)}v=T}else v=[];r[p]=v,w.g=7;break}if("proto_list"===h.type){if(d){for(v=Array(d.size()),x=0;x<d.size();x++)v[x]=d.get(x);d.delete()}else v=[];r[p]=v,w.g=7;break}if(void 0===d){w.g=3;break}if("float_list"===h.type){r[p]=d,w.g=7;break}if("proto"===h.type){r[p]=d,w.g=7;break}if("texture"!==h.type)throw Error("Unknown output config type: '"+h.type+"'");return(m=e.u[p])||(m=new $t(e.h,e.G),e.u[p]=m),b(w,Ft(m,d,e.I),13);case 13:f=w.h,r[p]=f;case 7:h.transform&&r[p]&&(r[p]=h.transform(r[p])),w.g=3;break;case 14:g[y]=w.h;case 3:o=c.next(),w.g=2;break;case 4:return w.return(r)}}))}(e,s,t.outs).then((function(n){n=u(n);for(var a=0;a<t.wants.length;++a){var o=s[r[a]];"object"==typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(e.D=n)})))}}),e.i.attachMultiListener(a,s),a.delete()}function jt(e){var t=this;e=e||{};var n={url:"face_detection_short.binarypb"},r={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new Pt({locateFile:e.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:n,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(e){var a,s,o,u,l;return S((function(c){switch(c.g){case 1:a=i("short"===e?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"]),s=a.next();case 2:if(s.done){c.g=4;break}return o=s.value,u="third_party/mediapipe/modules/face_detection/"+o,b(c,Vt(t.g,o),5);case 5:l=c.h,t.g.overrideFile(u,l),s=a.next(),c.g=2;break;case 4:return n.url="short"===e?"face_detection_short.binarypb":"face_detection_full.binarypb",r.graphOptionXref.calculatorName="short"===e?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",c.return(!0)}}))}},minDetectionConfidence:r}})}(e=Pt.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},e.reset=function(){var e=this;return S((function(t){e.i&&(e.i.reset(),e.o={},e.u={}),t.g=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],a=[],s={},o=i(Object.keys(e)),u=o.next();!u.done;s={R:s.R,S:s.S},u=o.next()){var l=u.value;l in this.j&&this.j[l]===e[l]||(this.j[l]=e[l],void 0!==(u=t[l])&&(u.onChange&&(s.R=u.onChange,s.S=e[l],r.push(function(e){return function(){return S((function(t){if(1==t.g)return b(t,e.R(e.S),2);!0===t.h&&(n.s=!0),t.g=0}))}}(s))),u.graphOptionXref&&(l={valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),l),a.push(u))))}0===r.length&&0===a.length||(this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(a),this.A=(void 0===this.A?[]:this.A).concat(r))}},e.initialize=function(){var e=this;return S((function(t){return 1==t.g?b(t,function(e){var t,n,r,a,s,o,i,l,c,p,h;return S((function(d){switch(d.g){case 1:return e.Z?(t=void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(e.j):e.g.files,b(d,S((function(e){switch(e.g){case 1:return e.o=2,b(e,WebAssembly.instantiate(Bt),4);case 4:e.g=3,e.o=0;break;case 2:return e.o=0,e.j=null,e.return(!1);case 3:return e.return(!0)}})),2)):d.return();case 2:if(n=d.h,"object"==typeof window)return zt("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),zt("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),o=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(o.map((function(t){var n=Vt(e,t.url);if(void 0!==t.path){var r=t.path;n=n.then((function(t){return e.overrideFile(r,t),Promise.resolve(t)}))}return n}))),c=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.$)):Promise.resolve()}))).then((function(){var t,n,r;return S((function(a){if(1==a.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,r=e,b(a,t(n),2);r.h=a.h,a.g=0}))})),p=S((function(t){return e.g.graph&&e.g.graph.url?t=b(t,Vt(e,e.g.graph.url),0):(t.g=0,t=void 0),t})),b(d,Promise.all([c,l,p]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return r=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.$)})),importScripts.apply(null,u(r)),a=e,b(d,createMediapipeSolutionsWasm(Module),6);case 6:a.h=d.h,e.l=new OffscreenCanvas(1,1),e.h.canvas=e.l,s=e.h.GL.createContext(e.l,{antialias:!1,alpha:!1,ja:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.h.GL.makeContextCurrent(s),d.g=4;break;case 7:if(e.l=document.createElement("canvas"),!(h=e.l.getContext("webgl2",{}))&&!(h=e.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),d.return();e.G=h,e.h.canvas=e.l,e.h.createContext(e.l,!0,!0,{});case 4:e.i=new e.h.SolutionWasm,e.Z=!1,d.g=0}}))}(e),2):3!=t.g?b(t,function(e){var t,n,r,a,s,o,u,l;return S((function(c){if(1==c.g)return e.g.graph&&e.g.graph.url&&e.Y===e.g.graph.url?c.return():(e.s=!0,e.g.graph&&e.g.graph.url?(e.Y=e.g.graph.url,b(c,Vt(e,e.g.graph.url),3)):void(c.g=2));for(2!=c.g&&(t=c.h,e.i.loadGraph(t)),n=i(Object.keys(e.C)),r=n.next();!r.done;r=n.next())a=r.value,e.i.overrideFile(a,e.C[a]);if(e.C={},e.g.listeners)for(s=i(e.g.listeners),o=s.next();!o.done;o=s.next())u=o.value,Ut(e,u);l=e.j,e.j={},e.setOptions(l),c.g=0}))}(e),3):b(t,function(e){var t,n,r,a,s,o;return S((function(u){switch(u.g){case 1:if(!e.s)return u.return();if(!e.A){u.g=2;break}t=i(e.A),n=t.next();case 3:if(n.done){u.g=5;break}return b(u,(0,n.value)(),4);case 4:n=t.next(),u.g=3;break;case 5:e.A=void 0;case 2:if(e.B){for(r=new e.h.GraphOptionChangeRequestList,a=i(e.B),s=a.next();!s.done;s=a.next())o=s.value,r.push_back(o);e.i.changeOptions(r),r.delete(),e.B=void 0}e.s=!1,u.g=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.C[e]=t},e.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},e.send=function(e,t){var n,r,a,s,o,u,l,c,p,h=this;return S((function(d){switch(d.g){case 1:return h.g.inputs?(n=1e3*(null==t?performance.now():t),b(d,h.D,2)):d.return();case 2:return b(d,h.initialize(),3);case 3:for(r=new h.h.PacketDataList,a=i(Object.keys(e)),s=a.next();!s.done;s=a.next())if(o=s.value,u=h.g.inputs[o]){e:{var m=e[o];switch(u.type){case"video":var f=h.o[u.stream];if(f||(f=new $t(h.h,h.G),h.o[u.stream]=f),0===f.l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&m instanceof HTMLVideoElement)var g=m.videoWidth,y=m.videoHeight;else"undefined"!=typeof HTMLImageElement&&m instanceof HTMLImageElement?(g=m.naturalWidth,y=m.naturalHeight):(g=m.width,y=m.height);y={glName:f.l,width:g,height:y},(g=f.g).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),f.h.bindTexture2d(f.l),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,m),f.h.bindTexture2d(0),f=y;break e;case"detections":for((f=h.o[u.stream])||(f=new Rt(h.h),h.o[u.stream]=f),f.data||(f.data=new f.g.DetectionListData),f.data.reset(m.length),y=0;y<m.length;++y){g=m[y];var w=f.data,v=w.setBoundingBox,x=y,N=g.boundingBox,S=new Nt;if(be(S,1,N.xCenter),be(S,2,N.yCenter),be(S,3,N.height),be(S,4,N.width),be(S,5,N.rotation),be(S,6,N.rectId),N=rt(S,St),v.call(w,x,N),g.landmarks)for(w=0;w<g.landmarks.length;++w){var T=!!(S=g.landmarks[w]).visibility;x=(v=f.data).addNormalizedLandmark,N=y,S=Object.assign(Object.assign({},S),{visibility:T?S.visibility:0}),be(T=new yt,1,S.x),be(T,2,S.y),be(T,3,S.z),S.visibility&&be(T,4,S.visibility),S=rt(T,bt),x.call(v,N,S)}if(g.V)for(w=0;w<g.V.length;++w)x=(v=f.data).addClassification,N=y,S=g.V[w],be(T=new ht,2,S.ga),S.index&&be(T,1,S.index),S.label&&be(T,3,S.label),S.displayName&&be(T,4,S.displayName),S=rt(T,dt),x.call(v,N,S)}f=f.data;break e;default:f={}}}switch(l=f,c=u.stream,u.type){case"video":r.pushTexture2d(Object.assign(Object.assign({},l),{stream:c,timestamp:n}));break;case"detections":(p=l).stream=c,p.timestamp=n,r.pushDetectionList(p);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return h.i.send(r),b(d,h.D,4);case 4:r.delete(),d.g=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},E("Solution",Pt),E("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=jt.prototype).close=function(){return this.g.close(),Promise.resolve()},e.onResults=function(e){this.g.onResults(e)},e.initialize=function(){var e=this;return S((function(t){return b(t,e.g.initialize(),0)}))},e.reset=function(){this.g.reset()},e.send=function(e){var t=this;return S((function(n){return b(n,t.g.send(e),0)}))},e.setOptions=function(e){this.g.setOptions(e)},E("FaceDetection",jt),E("FACEDETECTION_LIPS",Tt),E("FACEDETECTION_LEFT_EYE",kt),E("FACEDETECTION_LEFT_EYEBROW",Et),E("FACEDETECTION_RIGHT_EYE",_t),E("FACEDETECTION_RIGHT_EYEBROW",At),E("FACEDETECTION_FACE_OVAL",It),E("FACEDETECTION_CONTOURS",Mt),E("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),E("VERSION","0.4.1646425229")}).call(this)},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return N}else{if(e<=-m)return S;if(e+1>=m)return x}return e<0?i(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var h=i(l(n,u));s=s.mul(h).add(i(p))}else s=(s=s.mul(a)).add(i(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var h=4294967296,d=h*h,m=d/2,f=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var w=o(1,!0);n.UONE=w;var v=o(-1);n.NEG_ONE=v;var x=u(-1,2147483647,!1);n.MAX_VALUE=x;var N=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=N;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(l(e,6),this.unsigned),s=this,o="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1==(1&this.low)},T.isEven=function(){return 0==(1&this.low)},T.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,h=0,d=0,m=0;return d+=(m+=s+(65535&e.low))>>>16,h+=(d+=a+l)>>>16,c+=(h+=n+i)>>>16,c+=t+o,u((d&=65535)<<16|(m&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,d=65535&e.low,m=0,y=0,b=0,w=0;return b+=(w+=o*d)>>>16,y+=(b+=s*d)>>>16,b&=65535,y+=(b+=o*h)>>>16,m+=(y+=a*d)>>>16,y&=65535,m+=(y+=s*h)>>>16,y&=65535,m+=(y+=o*c)>>>16,m+=n*d+a*h+s*c+o*l,u((b&=65535)<<16|(w&=65535),(m&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return w;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),h=i(n),d=h.mul(e);d.isNegative()||d.gt(a);)d=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),a=a.sub(d)}return s},T.div=T.divide,T.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return u(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),o=n(30),i=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var r;!function(a,s,o){var i,u=256,l=o.pow(u,6),c=o.pow(2,52),p=2*c,h=u-1;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,b(s)]}}():e,3),r),d=new m(r),w=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|d.g(4)},w.quick=function(){return d.g(4)/4294967296},w.double=w,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&f(r,d),e.state=function(){return f(d,{})}),n?(o.random=e,t):e})(w,h,"global"in t?t.global:this==o,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*u+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=d;try{i=n(42)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},410:()=>{},628:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};(()=>{"use strict";n.r(r),n.d(r,{EkycTools:()=>ic});var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>vt,browserFiles:()=>Jn,browserHTTPRequest:()=>or,concatenateArrayBuffers:()=>_t,copyModel:()=>mn,decodeWeights:()=>St,encodeWeights:()=>Nt,fromMemory:()=>cr,fromMemorySync:()=>pr,getLoadHandlers:()=>zt,getModelArtifactsForJSON:()=>Ot,getModelArtifactsForJSONSync:()=>Mt,getModelArtifactsInfoForJSON:()=>Dt,getSaveHandlers:()=>Lt,getWeightSpecs:()=>Ct,http:()=>sr,isHTTPScheme:()=>rr,listModels:()=>hn,loadWeights:()=>er,moveModel:()=>fn,registerLoadRouter:()=>Bt,registerSaveRouter:()=>Rt,removeModel:()=>dn,weightsLoaderFactory:()=>tr,withSaveHandler:()=>hr,withSaveHandlerSync:()=>dr});var t={};n.r(t),n.d(t,{conv2d:()=>mi,depthwiseConv2d:()=>yi,matMul:()=>bi});var a={};n.r(a),n.d(a,{json:()=>ku});var s={};n.r(s),n.d(s,{json:()=>Eu});var o={};n.r(o),n.d(o,{json:()=>_u});var i={};n.r(i),n.d(i,{json:()=>Au});var u={};n.r(u),n.d(u,{json:()=>Iu});var l={};n.r(l),n.d(l,{json:()=>Mu});var c={};n.r(c),n.d(c,{json:()=>Ou});var p={};n.r(p),n.d(p,{json:()=>Du});var h={};n.r(h),n.d(h,{json:()=>Cu});var d={};n.r(d),n.d(d,{json:()=>$u});var m={};n.r(m),n.d(m,{json:()=>Fu});var f={};n.r(f),n.d(f,{json:()=>Ru});var g={};n.r(g),n.d(g,{json:()=>Bu});var y={};n.r(y),n.d(y,{json:()=>Lu});var b={};n.r(b),n.d(b,{json:()=>zu});var w={};n.r(w),n.d(w,{json:()=>Pu});var v={};n.r(v),n.d(v,{json:()=>Vu});var x={};n.r(x),n.d(x,{json:()=>Uu});var N={};n.r(N),n.d(N,{json:()=>ju});var S={};n.r(S),n.d(S,{OP_SCOPE_SUFFIX:()=>mt,abs:()=>jn,acos:()=>wr,acosh:()=>vr,add:()=>kn,addN:()=>xr,all:()=>Nr,any:()=>Sr,argMax:()=>Tr,argMin:()=>kr,asin:()=>Er,asinh:()=>_r,atan:()=>Ar,atan2:()=>Ir,atanh:()=>Mr,avgPool:()=>Pr,avgPool3d:()=>Vr,basicLSTMCell:()=>Kr,batchNorm:()=>Yr,batchNorm2d:()=>Xr,batchNorm3d:()=>Jr,batchNorm4d:()=>Zr,batchToSpaceND:()=>Gr,bincount:()=>Qr,bitwiseAnd:()=>ea,booleanMaskAsync:()=>Qo,broadcastArgs:()=>ta,broadcastTo:()=>na,buffer:()=>bn,cast:()=>wn,ceil:()=>ra,clipByValue:()=>aa,clone:()=>vn,complex:()=>gt,concat:()=>Ur,concat1d:()=>sa,concat2d:()=>oa,concat3d:()=>ia,concat4d:()=>ua,conv1d:()=>ca,conv2d:()=>la,conv2dTranspose:()=>ha,conv3d:()=>da,conv3dTranspose:()=>fa,cos:()=>ga,cosh:()=>ya,cosineWindow:()=>ii,cumprod:()=>ba,cumsum:()=>wa,denseBincount:()=>va,depthToSpace:()=>xa,depthwiseConv2d:()=>Na,diag:()=>Sa,dilation2d:()=>Ta,div:()=>_n,divNoNan:()=>_a,dot:()=>Aa,dropout:()=>si,einsum:()=>Ia,elu:()=>Ma,enclosingPowerOfTwo:()=>oi,ensureShape:()=>Oa,equal:()=>ka,erf:()=>Da,euclideanNorm:()=>za,exp:()=>Pa,expandDims:()=>Va,expm1:()=>Ua,eye:()=>Wa,fft:()=>_o,fill:()=>Pn,floor:()=>qa,floorDiv:()=>En,fused:()=>t,gather:()=>Ha,gatherND:()=>ai,greater:()=>Ka,greaterEqual:()=>Ga,ifft:()=>Ao,imag:()=>Ya,image:()=>uu,inTopKAsync:()=>ui,irfft:()=>Io,isFinite:()=>Xa,isInf:()=>Ja,isNaN:()=>Za,leakyRelu:()=>Qa,less:()=>es,lessEqual:()=>ts,linalg:()=>lu,linspace:()=>ns,localResponseNormalization:()=>rs,log:()=>as,log1p:()=>ss,logSigmoid:()=>us,logSoftmax:()=>ls,logSumExp:()=>cs,logicalAnd:()=>ps,logicalNot:()=>hs,logicalOr:()=>ds,logicalXor:()=>ms,losses:()=>cu,lowerBound:()=>ys,matMul:()=>jr,max:()=>$a,maxPool:()=>bs,maxPool3d:()=>ws,maxPoolWithArgmax:()=>vs,maximum:()=>qn,mean:()=>xs,meshgrid:()=>Ts,min:()=>Fa,minimum:()=>ks,mirrorPad:()=>Es,mod:()=>_s,moments:()=>As,movingAverage:()=>ti,mul:()=>An,multiRNNCell:()=>Is,multinomial:()=>Ms,neg:()=>os,norm:()=>La,notEqual:()=>Os,oneHot:()=>Ds,ones:()=>Ss,onesLike:()=>Cs,op:()=>ft,outerProduct:()=>$s,pad:()=>Fs,pad1d:()=>Rs,pad2d:()=>Bs,pad3d:()=>Ls,pad4d:()=>zs,pool:()=>Vs,pow:()=>Vn,prelu:()=>Us,print:()=>xn,prod:()=>js,raggedGather:()=>Ws,raggedRange:()=>qs,raggedTensorToTensor:()=>Hs,rand:()=>Ks,randomGamma:()=>Zs,randomNormal:()=>Qs,randomStandardNormal:()=>eo,randomUniform:()=>to,randomUniformInt:()=>no,range:()=>ro,real:()=>ao,reciprocal:()=>so,relu:()=>oo,relu6:()=>io,reshape:()=>zr,reverse:()=>uo,reverse1d:()=>lo,reverse2d:()=>co,reverse3d:()=>po,reverse4d:()=>ho,rfft:()=>Oo,round:()=>mo,rsqrt:()=>fo,scalar:()=>Cn,scatterND:()=>ni,searchSorted:()=>gs,selu:()=>go,separableConv2d:()=>yo,setdiff1dAsync:()=>bo,sigmoid:()=>Wr,sign:()=>wo,signal:()=>iu,sin:()=>vo,sinh:()=>xo,slice:()=>qr,slice1d:()=>No,slice2d:()=>So,slice3d:()=>To,slice4d:()=>ko,softmax:()=>Eo,softplus:()=>is,spaceToBatchND:()=>Ps,sparse:()=>pu,sparseToDense:()=>ri,spectral:()=>ou,split:()=>Mo,sqrt:()=>In,square:()=>Mn,squaredDifference:()=>Do,squeeze:()=>Co,stack:()=>$o,step:()=>Fo,stridedSlice:()=>Ro,string:()=>hu,sub:()=>Un,sum:()=>Ra,tan:()=>Bo,tanh:()=>Hr,tensor:()=>bt,tensor1d:()=>Lo,tensor2d:()=>zo,tensor3d:()=>mr,tensor4d:()=>Po,tensor5d:()=>Vo,tensor6d:()=>Uo,tensorScatterUpdate:()=>Wo,tile:()=>ja,topk:()=>qo,transpose:()=>ei,truncatedNormal:()=>Ho,unique:()=>Ko,unsortedSegmentSum:()=>Go,unstack:()=>Yo,upperBound:()=>Xo,variable:()=>Jo,where:()=>Ea,whereAsync:()=>Zo,zeros:()=>Ns,zerosLike:()=>On});var T=function(){function e(){}return e.handleScreen=function(e){var t=e;t.clientWidth>=t.clientHeight?t.classList.add("ekyct-container--rotate"):t.classList.remove("ekyct-container--rotate");var n=t.querySelector("div.ekyct-capture-region");if(n){var r=n,a=1;r.dataset.ratio&&(a=parseFloat(r.dataset.ratio)),this.insertShadingElement(r,a),this.insertCanvasElement(r)}},e.insertCanvasElement=function(e){var t,n=e.querySelector(".ekyct-shading"),r=e.querySelector(".ekyct-video");if(r&&n){null===(t=e.querySelector(".ekyct-canvas"))||void 0===t||t.remove();var a=n,s=r.clientWidth-2*parseFloat(a.style.borderLeftWidth.slice(0,-2)),o=r.clientHeight-2*parseFloat(a.style.borderTopWidth.slice(0,-2)),i=document.createElement("canvas");i.className="ekyct-canvas",i.style.width="".concat(s,"px"),i.style.height="".concat(o,"px"),i.style.display="none",e.appendChild(i)}},e.insertShadingElement=function(e,t){var n,r=e.querySelector(".ekyct-video");if(r){null===(n=e.querySelector(".ekyct-shading"))||void 0===n||n.remove();var a=r.clientWidth,s=r.clientHeight,o=document.createElement("div");o.className="ekyct-shading",o.style.width="".concat(a,"px"),o.style.height="".concat(s,"px");var i=(e.clientWidth-a)/2+"px",u=(e.clientHeight-s)/2+"px";o.style.top=u,o.style.left=i;var l=this.getShadingBorderSize(r,t);o.style.borderLeftWidth="".concat(l.borderX,"px"),o.style.borderRightWidth="".concat(l.borderX,"px"),o.style.borderTopWidth="".concat(l.borderY,"px"),o.style.borderBottomWidth="".concat(l.borderY,"px"),this.insertShaderBorders(o,this.shardBorderLargeSize,this.shardBorderSmallSize,-this.shardBorderSmallSize,null,0,!0),this.insertShaderBorders(o,this.shardBorderLargeSize,this.shardBorderSmallSize,-this.shardBorderSmallSize,null,0,!1),this.insertShaderBorders(o,this.shardBorderLargeSize,this.shardBorderSmallSize,null,-this.shardBorderSmallSize,0,!0),this.insertShaderBorders(o,this.shardBorderLargeSize,this.shardBorderSmallSize,null,-this.shardBorderSmallSize,0,!1),this.insertShaderBorders(o,this.shardBorderSmallSize,this.shardBorderLargeSize+this.shardBorderSmallSize,-this.shardBorderSmallSize,null,-this.shardBorderSmallSize,!0),this.insertShaderBorders(o,this.shardBorderSmallSize,this.shardBorderLargeSize+this.shardBorderSmallSize,null,-this.shardBorderSmallSize,-this.shardBorderSmallSize,!0),this.insertShaderBorders(o,this.shardBorderSmallSize,this.shardBorderLargeSize+this.shardBorderSmallSize,-this.shardBorderSmallSize,null,-this.shardBorderSmallSize,!1),this.insertShaderBorders(o,this.shardBorderSmallSize,this.shardBorderLargeSize+this.shardBorderSmallSize,null,-this.shardBorderSmallSize,-this.shardBorderSmallSize,!1),this.insertCircleRegion(o),e.appendChild(o)}},e.insertShaderBorders=function(e,t,n,r,a,s,o){var i=document.createElement("div");i.className="ekyct-shader-border",i.style.width="".concat(t,"px"),i.style.height="".concat(n,"px"),null!==r&&(i.style.top="".concat(r,"px")),null!==a&&(i.style.bottom="".concat(a,"px")),o?i.style.left="".concat(s,"px"):i.style.right="".concat(s,"px"),e.appendChild(i)},e.getShadingBorderSize=function(e,t){var n,r,a=e.clientWidth,s=e.clientHeight,o=a-2*(n=a<576?16:a<768?32:48),i=o*t;return i>s&&(n=(a-(o=(i=s)/t))/2),r=(s-i)/2,n<this.shardBorderSmallSize&&(r=(s-(o=a-2*(n=this.shardBorderSmallSize))*t)/2),r<this.shardBorderSmallSize&&(n=(a-(i=s-2*(r=this.shardBorderSmallSize))/t)/2),{borderX:n,borderY:r}},e.insertAlert=function(t,n,r){if(void 0===r&&(r="warning"),t){var a=t.querySelector(".ekyct-alert");a?a.innerHTML!==n&&(a.classList.contains("active")&&!e.insertAlertTimeout&&a.classList.remove("active"),e.insertAlertTimeout||e.setInsertAlertTimeout(a,n,2200,200)):((a=document.createElement("div")).className="ekyct-alert ".concat(r),t.appendChild(a),a.classList.contains("active")||e.insertAlertTimeout||e.setInsertAlertTimeout(a,n,2020,20))}},e.cleanAlert=function(t){var n=t.querySelector(".ekyct-alert");n&&n.classList.contains("active")&&(e.insertAlertTimeout?setTimeout((function(){n.classList.remove("active"),setTimeout((function(){n.remove()}),200)}),400):(n.classList.remove("active"),setTimeout((function(){n.remove()}),200)))},e.setInsertAlertTimeout=function(t,n,r,a){e.insertAlertTimeout=setTimeout((function(){t.classList.add("active"),t.innerHTML=n,setTimeout((function(){e.clearInsertAlertTimeout()}),r)}),a)},e.clearInsertAlertTimeout=function(){e.insertAlertTimeout&&(clearTimeout(e.insertAlertTimeout),e.insertAlertTimeout=null)},e.delay=function(e){return new Promise((function(t){setTimeout(t,e)}))},e.toggleLoader=function(t,n){if(void 0===t&&(t=!0),void 0===n&&(n=document.body),n){var r=n.querySelector(".ekyct-loader");if(r&&r.remove(),t){var a=e.createLoaderElement();n.appendChild(a)}}},e.toggleLoaderOnCaptureRegion=function(e,t){void 0===e&&(e=!0),t&&(e?t.classList.add("ekyct-hide-shading"):t.classList.remove("ekyct-hide-shading"),this.toggleLoader(e,t))},e.insertCircleRegion=function(e){var t=document.createElement("div"),n=parseFloat(e.style.width.slice(0,-2))-2*parseFloat(e.style.borderLeftWidth.slice(0,-2));t.className="ekyct-circle-region";for(var r=0;r<100;r++){var a=document.createElement("div");a.className="ekyct-circle-region-point",t.appendChild(a),a.style.transform="rotate(".concat(3.6*r,"deg) translateY(").concat(n/2-10,"px)")}e.appendChild(t)},e.createLoaderElement=function(){var e=document.createElement("div");e.className="ekyct-loader";var t=document.createElement("div");t.className="ekyct-loader-content";for(var n=1;n<=10;n++){var r=document.createElement("span");r.setAttribute("style","--i:"+n),t.appendChild(r)}return e.appendChild(t),e},e.newGuid=function(){var e="xxxxxxxx-xxxx-4xxx-yxxx-".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)})),t=new Date;return e+="".concat(t.getUTCFullYear()),t.getUTCMonth()<9?e+="0".concat(t.getUTCMonth()+1):e+=t.getUTCMonth()+1,t.getUTCDate()<10?e+="0".concat(t.getUTCDate()):e+="".concat(t.getUTCDate()),t.getUTCHours()<10?e+="0".concat(t.getUTCHours()):e+=t.getUTCHours(),t.getUTCMinutes()<10?e+="0".concat(t.getUTCMinutes()):e+=t.getUTCMinutes(),t.getUTCSeconds()<10?e+="0".concat(t.getUTCSeconds()):e+=t.getUTCSeconds(),e},e.insertAlertTimeout=null,e.shardBorderLargeSize=40,e.shardBorderSmallSize=5,e}(),k=n(982);class E{refCount(e){return _("refCount")}incRef(e){return _("incRef")}timerAvailable(){return!0}time(e){return _("time")}read(e){return _("read")}readSync(e){return _("readSync")}readToGPU(e,t){return _("readToGPU")}numDataIds(){return _("numDataIds")}disposeData(e,t){return _("disposeData")}write(e,t,n){return _("write")}move(e,t,n,r,a){return _("move")}createTensorFromGPUData(e,t,n){return _("createTensorFromGPUData")}memory(){return _("memory")}floatPrecision(){return _("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return _("dispose")}}function _(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function A(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function I(e,t,n=""){A(D(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function M(e){A(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function O(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function D(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function C(e){return e%1==0}function $(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function F(e,t){const n=t.length;return A((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),A(e.every((e=>C(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function R(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function B(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function L(e){return"string"==typeof e||e instanceof String}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":L(e)?"string":"boolean"==typeof e?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function U(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=U(e+t*i,o,n,r)}return a}function j(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U(0,e,t,n)}function W(e,t){const n=q(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach((t=>{A(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e){return e&&e.then&&"function"==typeof e.then}const G="tfjsflags";class Y{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=X,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(K(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);G in e&&e[G].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function X(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function J(){return Q}let Z,Q=null;function ee(){if(null==Z){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Z=e}return Z}function te(e,t){const n=function(){const e=ee();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const ne="Cast",re="Fill",ae="Identity",se="LinSpace",oe="Range",ie="Tile",ue="Transpose",le="FromPixels",ce="_FusedMatMul",pe="FusedConv2D",he="FusedDepthwiseConv2D",de=te("kernelRegistry",(()=>new Map)),me=te("gradRegistry",(()=>new Map));function fe(e,t){const n=function(e,t){return`${t}_${e}`}(e,t);return de.get(n)}function ge(e){return me.get(e)}function ye(e){const t=de.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function be(...e){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...e)}function we(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ve=n(720);const xe=n.n(ve)()||ve;function Ne(e){return xe.fromString(e,!0,16)}function Se(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=_e(e)),J().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Te(){return J().platform.now()}function ke(e,t="utf-8"){return t=t||"utf-8",J().platform.decode(e,t)}function Ee(e){return null!=J().platform.isTypedArray?J().platform.isTypedArray(e):we(e)}function _e(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||K(e)||null==e||Ee(e)&&n)t.push(e);else if(Array.isArray(e)||Ee(e))for(let r=0;r<e.length;++r)_e(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)_e(e[a],t,n)}return t}Ne("c3a5c85c97cb3127"),Ne("b492b66fbe98f273"),Ne("9ae16a3b2f90404f");class Ae{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Me)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const o=Te();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Te()-o})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Ie(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Ie(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Me{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?$(`${r}ms`,9):r.error,i=$(e,25),u=t.rank,l=t.size,c=$(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Oe=20,De=3,Ce=7;function $e(e,t,n,r){const a=V(t),s=function(e,t,n,r){const a=O(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?Le(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],Fe(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=Be(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function Fe(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Ce))} + ${parseFloat(e[1].toFixed(Ce))}j`:L(e)?`'${e}'`:"bool"===n?Re(e):parseFloat(e.toFixed(Ce)).toString(),$(r,t)}function Re(e){return 0===e?"false":"true"}function Be(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[Fe(Le(e)[0],0,n)]:"bool"===n?[Re(e[0])]:[e[0].toString()];if(1===u){if(i>Oe){const t=De*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-De)*o,i*o));return"complex64"===n&&(r=Le(r),s=Le(s)),["["+r.map(((e,t)=>Fe(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Fe(e,a[i-De+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Le(e):Array.from(e)).map(((e,t)=>Fe(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),p=r[0]*o,h=[];if(i>Oe){for(let t=0;t<De;t++){const r=t*p,s=r+p;h.push(...Be(e.slice(r,s),l,n,c,a,!1))}h.push("...");for(let t=i-De;t<i;t++){const r=t*p,s=r+p;h.push(...Be(e.slice(r,s),l,n,c,a,t===i-1))}}else for(let t=0;t<i;t++){const r=t*p,s=r+p;h.push(...Be(e.slice(r,s),l,n,c,a,t===i-1))}const d=2===u?",":"";h[0]="["+(i>0?h[0]+d:"");for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+d;let m=",\n";for(let e=2;e<u;e++)m+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":m),h}function Le(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ze{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=O(e),null!=n){const e=n.length;A(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||R(t,this.size),this.strides=V(e)}set(e,...t){0===t.length&&(t=[0]),A(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Pe().makeTensor(this.values,this.shape,this.dtype)}}let Pe=null,Ve=null,Ue=null;class je{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=O(e),this.strides=V(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ve.buffer(this.shape,this.dtype,e)}bufferSync(){return Ve.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return j(this.shape,e,"complex64"===this.dtype)}arraySync(){return j(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Pe().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ke(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Pe().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Pe().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ke(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Pe().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Pe().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ve.print(this,e)}clone(){return this.throwIfDisposed(),Ve.clone(this)}toString(e=!1){return $e(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ve.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Pe().makeVariable(this,e,t,n)}}Object.defineProperty(je,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),te("Tensor",(()=>je));class We extends je{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!D(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Pe().disposeTensor(this),this.dataId=e.dataId,Pe().incRef(this,null)}dispose(){Pe().disposeVariable(this),this.isDisposedInternal=!0}}var qe,He,Ke,Ge,Ye;Object.defineProperty(We,Symbol.hasInstance,{value:e=>e instanceof je&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(qe||(qe={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(He||(He={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ke||(Ke={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ge||(Ge={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ye||(Ye={}));const Xe={float32:Ge,int32:He,bool:Ke,complex64:Ye};function Je(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Ze(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Qe(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Xe[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function et(e){const t=[];return tt(e,t,new Set),t}function tt(e,t,n){if(null==e)return;if(e instanceof je)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),tt(r,t,n))}}function nt(e){return null!=e.kernelName}class rt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class at{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new rt}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(be(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ae(this.backendInstance),!0}setupRegisteredKernels(){ye(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ye(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof E||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,be(`Initialization of backend ${e} failed`),be(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return be(`Initialization of backend ${e} failed`),be(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return at.nextTensorId++}nextVariableId(){return at.nextVariableId++}clone(e){const t=ot.runKernel(ae,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ot.runKernel(ne,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==fe(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=nt(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(nt(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=fe(t,this.backendName);A(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,p=nt(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=o()})),r&&this.addTapeNode(u,l,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=ge(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(A(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&L(e[0])&&(a=e.map((e=>function(e,t="utf-8"){return t=t||"utf-8",J().platform.encode(e,t)}(e))));const s=r.write(a,t,n),o=new je(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new je(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new We(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*B(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof We||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*B(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=ge(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=q(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=et(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(A(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));A(a instanceof je,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=W(O(e),"float32");return ot.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!D(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),it);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return A(P(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;A(t.every((e=>e instanceof je)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),A(n.value instanceof je,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),A(P(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];A(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),A(s.every((e=>e instanceof je)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Te(),n=await this.backend.time(e);return n.wallMs=Te()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new rt;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function st(){const e=ee();if(null==e._tfengine){const t=new Y(e);e._tfengine=new at(t)}var t;return t=e._tfengine.ENV,Q=t,Pe=()=>e._tfengine,e._tfengine}at.nextTensorId=0,at.nextVariableId=0;const ot=st();function it(e,t){const n={a:e,b:t};return ot.runKernel("Add",n)}const ut=J();function lt(e,t){let n=e;if(Ee(e))return"string"===t?[]:[e.length];if(Je(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Ze(e))return[e.buffer.size/(null==t?4:B(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Ee(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ct(e,r,[]),r}function ct(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ee(e))return void A(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));A(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),A(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ct(e[t],r,n.concat(t))}function pt(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ht(e,t,n,r="numeric"){if(e instanceof je)return pt(r,e.dtype,t,n),e;let a=z(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),pt(r,a,t,n),null==e||!Ee(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=lt(e,a);Ee(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?Se(e,a):_e(e,[],!0);return ot.makeTensor(o,s,a)}function dt(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>ht(e,`${t}[${a}]`,n,r)))}ut.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ut.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),ut.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ut.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ut.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ut.registerFlag("PROD",(()=>!1)),ut.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ut.getBool("DEBUG"))),ut.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ut.registerFlag("IS_TEST",(()=>!1)),ut.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ut.getBool("DEBUG"))),ut.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ut.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ut.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const mt="__op";function ft(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=mt;const a=(...e)=>{ot.startScope(n);try{const t=r(...e);return K(t)&&console.error("Cannot return a Promise inside of tidy."),ot.endScope(t),t}catch(e){throw ot.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const gt=ft({complex_:function(e,t){const n=ht(e,"real","complex"),r=ht(t,"imag","complex");I(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ot.runKernel("Complex",a)}});function yt(e,t,n,r){if(null==r)r=z(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ze(e)||Je(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ot.backend.createTensorFromGPUData(e,t||n,r)}if(!Ee(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){H(t);const e=O(t),r=O(n);A(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==O(t.slice(e));A(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ee(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Se(e,r):_e(e,[],!0),ot.makeTensor(e,t,r)}function bt(e,t,n){return yt(e,t,lt(e,n),n)}const wt={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class vt{static join(e){return new vt(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Ee(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],o=e+s-n.start,i=s,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,o,u-o);if(a.set(l,i),s+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}const xt=4;async function Nt(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+xt*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=xt,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:Tt(await Promise.all(r)),specs:n}}function St(e,t){const n=new vt(e),r={};let a,s=0;for(const e of t){const t=e.name,o=e.dtype,i=e.shape,u=O(i);let l;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const i=wt[r.dtype],c=n.slice(s,s+u*i),p="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===a&&(a=$t()),l=a(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*r.scale+r.min)}}s+=u*i}else if("string"===o){const t=O(e.shape);l=[];for(let e=0;e<t;e++){const e=new Uint32Array(n.slice(s,s+xt))[0];s+=xt;const t=new Uint8Array(n.slice(s,s+e));l.push(t),s+=e}}else{const e=wt[o],a=n.slice(s,s+u*e);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],n[t]=l[2*t+1];const s=bt(e,i,"float32"),o=bt(n,i,"float32");r[t]=gt(s,o),s.dispose(),o.dispose()}}s+=u*e}"complex64"!==o&&(r[t]=bt(l,i,o))}return r}function Tt(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const kt="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Et(e){return kt?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function _t(e){return vt.join(e)}function At(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function It(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Mt(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Ot(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Mt(e,n,r)}function Dt(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Et(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Et(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new vt(e.weightData).byteLength}}function Ct(e){const t=[];for(const n of e)t.push(...n.weights);return t}function $t(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class Ft{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ft.instance&&(Ft.instance=new Ft),Ft.instance}static registerSaveRouter(e){Ft.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ft.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ft.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ft.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ft.getInstance().loadRouters:Ft.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Rt=e=>Ft.registerSaveRouter(e),Bt=e=>Ft.registerLoadRouter(e),Lt=e=>Ft.getSaveHandlers(e),zt=(e,t)=>Ft.getLoadHandlers(e,t),Pt="tensorflowjs",Vt="models_store",Ut="model_info_store";function jt(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Wt(e){const t=e.result;t.createObjectStore(Vt,{keyPath:"modelPath"}),t.createObjectStore(Ut,{keyPath:"modelPath"})}class qt{constructor(e){if(this.indexedDB=jt(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Pt,1);r.onupgradeneeded=()=>Wt(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Vt,"readonly"),r=t.objectStore(Vt).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=vt.join(t.weightData);const r=Dt(t),s=a.transaction(Ut,"readwrite");let o,i,u=s.objectStore(Ut);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}o.onsuccess=()=>{i=a.transaction(Vt,"readwrite");const o=i.objectStore(Vt);let l;try{l=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=s.objectStore(Ut);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}qt.URL_SCHEME="indexeddb://";const Ht=e=>{return J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qt.URL_SCHEME)?(t=e.slice(qt.URL_SCHEME.length),new qt(t)):null;var t};Ft.registerSaveRouter(Ht),Ft.registerLoadRouter(Ht);class Kt{constructor(){this.indexedDB=jt()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Pt,1);n.onupgradeneeded=()=>Wt(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Ut,"readonly"),s=a.objectStore(Ut).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(qt.URL_SCHEME)?t.slice(qt.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Pt,1);r.onupgradeneeded=()=>Wt(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Ut,"readwrite"),o=s.objectStore(Ut),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(Vt,"readwrite");const r=u.objectStore(Vt).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const Gt="/",Yt="tensorflowjs_models",Xt="info",Jt="model_topology",Zt="weight_specs",Qt="weight_data",en="model_metadata";function tn(e){return{info:[Yt,e,Xt].join(Gt),topology:[Yt,e,Jt].join(Gt),weightSpecs:[Yt,e,Zt].join(Gt),weightData:[Yt,e,Qt].join(Gt),modelMetadata:[Yt,e,en].join(Gt)}}function nn(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function rn(e){const t=e.split(Gt);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Gt)}class an{constructor(e){if(!J().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=tn(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Dt(e),a=vt.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(kt)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw nn(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(kt){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}an.URL_SCHEME="localstorage://";const sn=e=>{return J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(an.URL_SCHEME)?(t=e.slice(an.URL_SCHEME.length),new an(t)):null;var t};Ft.registerSaveRouter(sn),Ft.registerLoadRouter(sn);class on{constructor(){A(J().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),A("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Yt+Gt,n=Gt+Xt;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[rn(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=tn(e=(t=e).startsWith(an.URL_SCHEME)?t.slice(an.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return nn(n),r}}const un="://";class ln{constructor(){this.managers={}}static getInstance(){return null==ln.instance&&(ln.instance=new ln),ln.instance}static registerManager(e,t){A(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(un)&&(e=e.slice(0,e.indexOf(un))),A(e.length>0,(()=>"scheme must not be an empty string."));const n=ln.getInstance();A(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ln.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ln.getInstance().managers)}}function cn(e){if(-1===e.indexOf(un))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ln.getSchemes().join(",")}`);return{scheme:e.split(un)[0],path:e.split(un)[1]}}async function pn(e,t,n=!1){A(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ft.getLoadHandlers(e);A(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),A(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Ft.getSaveHandlers(t);A(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),A(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=cn(e).scheme,u=cn(e).path,l=i===cn(e).scheme,c=await a.load();n&&l&&await ln.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await ln.getManager(i).removeModel(u),p.modelArtifactsInfo}async function hn(){const e=ln.getSchemes(),t={};for(const n of e){const e=await ln.getManager(n).listModels();for(const r in e)t[n+un+r]=e[r]}return t}async function dn(e){const t=cn(e);return ln.getManager(t.scheme).removeModel(t.path)}async function mn(e,t){return pn(e,t,!1)}async function fn(e,t){return pn(e,t,!0)}class gn{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&J().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return we(e)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new gn);try{ln.registerManager(an.URL_SCHEME,new on)}catch(e){}try{ln.registerManager(qt.URL_SCHEME,new Kt)}catch(e){}}let yn;function bn(e,t="float32",n){return t=t||"float32",H(e),new ze(e,t,n)}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=J().global.fetch?J().global.fetch(e,t):(null==yn&&(yn=n(410)),yn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const wn=ft({cast_:function(e,t){const n=ht(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ot.runKernel(ne,r,a)}}),vn=ft({clone_:function(e){const t={x:ht(e,"x","clone","string_or_numeric")};return ot.runKernel(ae,t)}});function xn(e,t=!1){console.log(e.toString(t))}function Nn(e,t){return ot.tidy(e,t)}function Sn(e){et(e).forEach((e=>e.dispose()))}function Tn(e){return ot.keep(e)}st(),Ve={buffer:bn,cast:wn,clone:vn,print:xn},Ue=function(e){J().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const kn=ft({add_:function(e,t){let n=ht(e,"a","add"),r=ht(t,"b","add");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Add",a)}}),En=ft({floorDiv_:function(e,t){let n=ht(e,"a","floorDiv"),r=ht(t,"b","floorDiv");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("FloorDiv",a)}}),_n=ft({div_:function(e,t){let n=ht(e,"a","div"),r=ht(t,"b","div");if([n,r]=Qe(n,r),"int32"===n.dtype&&"int32"===r.dtype)return En(n,r);const a={a:n,b:r};return ot.runKernel("RealDiv",a,{})}}),An=ft({mul_:function(e,t){let n=ht(e,"a","mul"),r=ht(t,"b","mul");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Multiply",a)}}),In=ft({sqrt_:function(e){const t={x:ht(e,"x","sqrt","float32")};return ot.runKernel("Sqrt",t)}}),Mn=ft({square_:function(e){const t=ht(e,"x","square");return ot.runKernel("Square",{x:t},{})}}),On=ft({zerosLike_:function(e){const t={x:ht(e,"x","zerosLike")};return ot.runKernel("ZerosLike",t)}});function Dn(e){return ot.customGrad(e)}function Cn(e,t){if((Ee(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ee(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return yt(e,[],[],t)}const $n=new Map,Fn=new Map;class Rn{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Bn{constructor(){this.classNameMap={}}static getMap(){return null==Bn.instance&&(Bn.instance=new Bn),Bn.instance}static register(e){Bn.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ln(e,t,n){A(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),A("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),A(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Bn.register(e),$n.set(r,e),Fn.set(e,r),e}class zn extends Rn{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Sn(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){A(P(e),(()=>"The f passed in variableGrads(f) must be a function")),A(null==t||Array.isArray(t)&&t.every((e=>e instanceof We)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ot.registeredVariables)t.push(ot.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),A(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:o}=ot.gradients(e,t,null,!0);A(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),A(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Sn(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Cn(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}function Pn(e,t,n){H(e);const r={shape:e,value:t,dtype:n=n||z(t)};return ot.runKernel(re,{},r)}Object.defineProperty(zn,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Vn=ft({pow_:function(e,t){let n=ht(e,"base","pow"),r=ht(t,"exp","pow");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Pow",a)}}),Un=ft({sub_:function(e,t){let n=ht(e,"a","sub"),r=ht(t,"b","sub");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Sub",a)}}),jn=ft({abs_:function(e){const t=ht(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ot.runKernel("ComplexAbs",e)}{const e={x:t};return ot.runKernel("Abs",e)}}});function Wn(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===s)r[n-a-1]=o;else if(1===o)r[n-a-1]=s;else{if(s!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-a-1]=s}}return r}const qn=ft({maximum_:function(e,t){let n=ht(e,"a","maximum"),r=ht(t,"b","maximum");[n,r]=Qe(n,r),"bool"===n.dtype&&(n=wn(n,"int32"),r=wn(r,"int32")),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("Maximum",a)}});class Hn extends zn{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ot.registeredVariables[t];Nn((()=>{const e=kn(An(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Tn(Cn(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}const Kn=[class extends zn{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ot.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ot.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Nn((()=>On(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Nn((()=>On(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Nn((()=>{const e=kn(An(s,this.rho),An(Mn(a),1-this.rho)),t=An(_n(In(kn(o,this.epsilon)),In(kn(s,this.epsilon))),a),n=kn(An(o,this.rho),An(Mn(t),1-this.rho));s.assign(e),o.assign(n);const i=kn(An(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Sn(this.accumulatedGrads.map((e=>e.variable))),Sn(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends zn{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ot.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Nn((()=>Pn(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Nn((()=>{const e=kn(s,Mn(a));s.assign(e);const t=kn(An(_n(a,In(kn(e,ot.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Sn(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends zn{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Nn((()=>{this.accBeta1=Cn(t).variable(),this.accBeta2=Cn(n).variable()})),null==r&&(this.epsilon=ot.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Nn((()=>{const n=Un(1,this.accBeta1),r=Un(1,this.accBeta2);t.forEach(((t,a)=>{const s=ot.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Nn((()=>On(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Nn((()=>On(s).variable(!1)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=kn(An(i,this.beta1),An(o,1-this.beta1)),c=kn(An(u,this.beta2),An(Mn(o),1-this.beta2)),p=_n(l,n),h=_n(c,r);i.assign(l),u.assign(c);const d=kn(An(_n(p,kn(In(h),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(An(this.accBeta1,this.beta1)),this.accBeta2.assign(An(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Sn(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Sn(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Nn((()=>{this.accBeta1.assign(Vn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Vn(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends zn{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Nn((()=>{this.iteration=Cn(0).variable(),this.accBeta1=Cn(t).variable()})),null==r&&(this.epsilon=ot.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Nn((()=>{const n=Un(1,this.accBeta1),r=_n(-this.learningRate,kn(An(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=ot.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:On(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:On(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=kn(An(i,this.beta1),An(o,1-this.beta1)),c=An(u,this.beta2),p=jn(o),h=qn(c,p);i.assign(l),u.assign(h);const d=kn(An(_n(r,n),_n(l,kn(h,this.epsilon))),s);s.assign(d)})),this.iteration.assign(kn(this.iteration,1)),this.accBeta1.assign(An(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Sn(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Sn(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends Hn{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Cn(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ot.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Nn((()=>On(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Nn((()=>{let e;const t=kn(An(this.m,a),s);e=this.useNesterov?kn(An(this.c,kn(s,An(t,this.m))),r):kn(An(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Sn(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},class extends zn{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ot.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ot.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Nn((()=>On(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Nn((()=>On(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Nn((()=>On(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Nn((()=>{const e=kn(An(o,this.decay),An(Mn(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=kn(An(t,this.decay),An(s,1-this.decay)),u=_n(An(s,this.learningRate),In(Un(e,kn(Mn(a),this.epsilon)))),l=kn(An(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(l);const c=Un(r,l);r.assign(c)}else{const e=kn(An(o,this.decay),An(Mn(s),1-this.decay)),t=kn(An(i,this.momentum),_n(An(s,this.learningRate),In(kn(e,this.epsilon))));o.assign(e),i.assign(t);const n=Un(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Sn(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Sn(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Sn(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Hn];function Gn(e){return new Promise((e=>setTimeout(e))).then(e)}class Yn{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Yn.URL_SCHEME)&&(e=e.slice(Yn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=vt.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=It(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Gn((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Gn((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Dt(e)}}}}Yn.URL_SCHEME="downloads://";class Xn{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Ot(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>At(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=At(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Jn(e){return new Xn(e)}function Zn(e,t,n,r){!function(e){A(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){A(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),A(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),A(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Qn(e,t){null==t&&(t={});const n=null==t.fetchFunc?J().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Zn(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Zn(a,t.onProgress,.5,1)}async function er(e,t="",n,r){return tr((e=>Qn(e,{requestInit:r})))(e,t,n)}function tr(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=wt[u]*O(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length,r=new vt(c.slice(h,h+n));s[e].forEach((e=>{const t=St(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),h+=n})),p}}Ft.registerSaveRouter((e=>J().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yn.URL_SCHEME)?function(e="model"){return new Yn(e)}(e.slice(Yn.URL_SCHEME.length)):null));class nr{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(A("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,A(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&A(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=It(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=vt.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Dt(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ot(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=Ct(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,await Qn(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function rr(e){return null!=e.match(nr.URL_SCHEME_REGEX)}nr.URL_SCHEME_REGEX=/^https?:\/\//;const ar=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>rr(e))):rr(e),n)return sr(e,t)}return null};function sr(e,t){return new nr(e,t)}function or(e,t){return sr(e,t)}Ft.registerSaveRouter(ar),Ft.registerLoadRouter(ar);class ir{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ur{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class lr{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function cr(e,t,n,r){return new lr(pr(...arguments))}function pr(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ir(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ir({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ir({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function hr(e){return new ur(e)}function dr(e){return new ur(e)}function mr(e,t,n){if(M(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=lt(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return yt(e,t,r,n)}let fr,gr=!1;async function yr(e,t){let n=ht(e,"img","toPixels");if(!(e instanceof je)){const e=n;n=wn(e,"int32"),e.dispose()}!function(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){gr||null!=fe("Draw",ot.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),gr=!0),t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const br=ft({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=fe(le,ot.backendName)){const n={pixels:e},r={numChannels:t};return ot.runKernel(le,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(o)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||i){if(null==fr)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");fr=new OffscreenCanvas(1,1).getContext("2d")}else fr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});fr.canvas.width=u,fr.canvas.height=l,fr.drawImage(e,0,0,u,l),c=fr.getImageData(0,0,u,l).data}if(4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return mr(p,[l,u,t],"int32")}}),wr=ft({acos_:function(e){const t={x:ht(e,"x","acos")};return ot.runKernel("Acos",t)}}),vr=ft({acosh_:function(e){const t={x:ht(e,"x","acosh")};return ot.runKernel("Acosh",t)}}),xr=ft({addN_:function(e){A(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),A(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>ht(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!D(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ot.runKernel("AddN",r)}}),Nr=ft({all_:function(e,t=null,n=!1){const r={x:ht(e,"x","all","bool")},a={axis:t,keepDims:n};return ot.runKernel("All",r,a)}}),Sr=ft({any_:function(e,t=null,n=!1){const r={x:ht(e,"x","any","bool")},a={axis:t,keepDims:n};return ot.runKernel("Any",r,a)}}),Tr=ft({argMax_:function(e,t=0){const n={x:ht(e,"x","argMax")},r={axis:t};return ot.runKernel("ArgMax",n,r)}}),kr=ft({argMin_:function(e,t=0){const n={x:ht(e,"x","argMin")},r={axis:t};return ot.runKernel("ArgMin",n,r)}}),Er=ft({asin_:function(e){const t={x:ht(e,"x","asin")};return ot.runKernel("Asin",t)}}),_r=ft({asinh_:function(e){const t={x:ht(e,"x","asinh")};return ot.runKernel("Asinh",t)}}),Ar=ft({atan_:function(e){const t={x:ht(e,"x","atan")};return ot.runKernel("Atan",t)}}),Ir=ft({atan2_:function(e,t){let n=ht(e,"a","atan2"),r=ht(t,"b","atan2");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Atan2",a)}}),Mr=ft({atanh_:function(e){const t={x:ht(e,"x","atanh")};return ot.runKernel("Atanh",t)}});function Or(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c]=e}const[h,d,,m]=t,[f,g]=Dr(n),[y,b]=Dr(r),w=Cr(h,y),v=Cr(d,b),{padInfo:x,outHeight:N,outWidth:S}=function(e,t,n,r,a,s,o,i,u){let l,c,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n,r=1){const a=Cr(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}(e,t,n));const s=e[1];return[$r((e[0]-t+2*r)/n+1,a),$r((s-t+2*r)/n+1,a)]}([t,n],s,r,e,i);c=a[0],p=a[1]}else if("same"===e){c=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),u=Math.floor(e/2),h=e-u,d=Math.floor(i/2);l={top:u,bottom:h,left:d,right:i-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],f="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:d,left:m,right:f,type:0===h&&0===d&&0===m&&0===f?"VALID":"EXPLICIT"},c=$r((t-s+h+d)/r+1,i),p=$r((n-o+m+f)/a+1,i)}}return{padInfo:l,outHeight:c,outWidth:p}}(a,l,c,f,g,w,v,s,i),T=o?m*p:m;let k;return"channelsFirst"===i?k=[u,T,N,S]:"channelsLast"===i&&(k=[u,N,S,T]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:p,outHeight:N,outWidth:S,outChannels:T,padInfo:x,strideHeight:f,strideWidth:g,filterHeight:h,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:k,filterShape:t}}function Dr(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Cr(e,t){return t<=1?e:e+(e-1)*(t-1)}function $r(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Fr(e){const[t,n,r]=Dr(e);return 1===t&&1===n&&1===r}function Rr(e,t){return Fr(e)||Fr(t)}function Br(e){return Dr(e).every((e=>e>0))}function Lr(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)A(C(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{A(C(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const zr=ft({reshape_:function(e,t){const n={x:ht(e,"x","reshape","string_or_numeric")},r={shape:t};return ot.runKernel("Reshape",n,r)}}),Pr=ft({avgPool_:function(e,t,n,r,a){const s=ht(e,"x","avgPool","float32");A(Rr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=zr(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Lr("avgPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=ot.runKernel("AvgPool",u,l);return c=wn(c,s.dtype),i?zr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Vr=ft({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=ht(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=zr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),A("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),A("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Lr("avgPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let p=ot.runKernel("AvgPool3D",l,c);return p=wn(p,i.dtype),u?zr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ur=ft({concat_:function(e,t=0){A(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=dt(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return vn(n[0]);const r=n,a={axis:t};return ot.runKernel("Concat",r,a)}}),jr=ft({matMul_:function(e,t,n=!1,r=!1){let a=ht(e,"a","matMul"),s=ht(t,"b","matMul");[a,s]=Qe(a,s);const o={a,b:s},i={transposeA:n,transposeB:r};return ot.runKernel("BatchMatMul",o,i)}}),Wr=ft({sigmoid_:function(e){const t={x:ht(e,"x","sigmoid","float32")};return ot.runKernel("Sigmoid",t)}}),qr=ft({slice_:function(e,t,n){const r=ht(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return ot.runKernel("Slice",a,s)}}),Hr=ft({tanh_:function(e){const t={x:ht(e,"x","tanh","float32")};return ot.runKernel("Tanh",t)}}),Kr=ft({basicLSTMCell_:function(e,t,n,r,a,s){const o=ht(e,"forgetBias","basicLSTMCell"),i=ht(t,"lstmKernel","basicLSTMCell"),u=ht(n,"lstmBias","basicLSTMCell"),l=ht(r,"data","basicLSTMCell"),c=ht(a,"c","basicLSTMCell"),p=ht(s,"h","basicLSTMCell"),h=Ur([l,p],1),d=jr(h,i),m=kn(d,u),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=qr(m,[0,0],y),w=qr(m,[0,g],y),v=qr(m,[0,2*g],y),x=qr(m,[0,3*g],y),N=kn(An(Wr(b),Hr(w)),An(c,Wr(kn(o,v))));return[N,An(Hr(N),Wr(x))]}}),Gr=ft({batchToSpaceND_:function(e,t,n){const r=ht(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));A(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),A(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),A(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return ot.runKernel("BatchToSpaceND",s,o)}}),Yr=ft({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=ht(e,"x","batchNorm"),i=ht(t,"mean","batchNorm"),u=ht(n,"variance","batchNorm");let l,c;null!=a&&(l=ht(a,"scale","batchNorm")),null!=r&&(c=ht(r,"offset","batchNorm")),A(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p={x:function(e){let t;return t=0===e.rank||1===e.rank?zr(e,[1,1,1,e.size]):2===e.rank?zr(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?zr(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:c,mean:i,variance:u},h={varianceEpsilon:s},d=ot.runKernel("FusedBatchNorm",p,h);return zr(d,o.shape)}}),Xr=ft({batchNorm2d_:function(e,t,n,r,a,s){const o=ht(e,"x","batchNorm"),i=ht(t,"mean","batchNorm"),u=ht(n,"variance","batchNorm");let l,c;return null!=a&&(l=ht(a,"scale","batchNorm")),null!=r&&(c=ht(r,"offset","batchNorm")),A(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),A(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),A(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Yr(o,i,u,c,l,s)}}),Jr=ft({batchNorm3d_:function(e,t,n,r,a,s){const o=ht(e,"x","batchNorm"),i=ht(t,"mean","batchNorm"),u=ht(n,"variance","batchNorm");let l,c;return null!=a&&(l=ht(a,"scale","batchNorm")),null!=r&&(c=ht(r,"offset","batchNorm")),A(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),A(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),A(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Yr(o,i,u,c,l,s)}}),Zr=ft({batchNorm4d_:function(e,t,n,r,a,s){const o=ht(e,"x","batchNorm"),i=ht(t,"mean","batchNorm"),u=ht(n,"variance","batchNorm");let l,c;return null!=a&&(l=ht(a,"scale","batchNorm")),null!=r&&(c=ht(r,"offset","batchNorm")),A(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),A(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),A(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&A(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&A(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Yr(o,i,u,c,l,s)}}),Qr=ft({bincount_:function(e,t,n){const r=ht(e,"x","bincount"),a=ht(t,"weights","bincount");A("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),A(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},o={size:n};return ot.runKernel("Bincount",s,o)}}),ea=ft({bitwiseAnd_:function(e,t){const n=ht(e,"x","bitwiseAnd"),r=ht(t,"y","bitwiseAnd");if(!D(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const a={a:n,b:r};return ot.runKernel("BitwiseAnd",a)}}),ta=ft({broadcastArgs_:function(e,t){const n=ht(e,"s0","broadcastArgs","int32"),r=ht(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return ot.runKernel("BroadcastArgs",a)}}),na=ft({broadcastTo_:function(e,t){let n=ht(e,"broadcastTo","x");const r=n.shape;if(H(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=zr(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return vn(n);const o={x:n},i={reps:s};return ot.runKernel(ie,o,i)}}),ra=ft({ceil_:function(e){const t={x:ht(e,"x","ceil","float32")};return ot.runKernel("Ceil",t)}}),aa=ft({clipByValue_:function(e,t,n){const r=ht(e,"x","clipByValue");if(A(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Pn(r.shape,t,r.dtype);const a={x:r},s={clipValueMin:t,clipValueMax:n};return ot.runKernel("ClipByValue",a,s)}}),sa=ft({concat1d_:function(e){return Ur(e,0)}}),oa=ft({concat2d_:function(e,t){return Ur(e,t)}}),ia=ft({concat3d_:function(e,t){return Ur(e,t)}}),ua=ft({concat4d_:function(e,t){return Ur(e,t)}}),la=ft({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=ht(e,"x","conv2d","float32"),u=ht(t,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=zr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Lr("conv2d",r,o);const p="NHWC"===a?l.shape[3]:l.shape[1];A(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),A(Rr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),A(Br(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),A(Br(n),(()=>"Error in conv2D: Strides should be larger than 0."));const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=ot.runKernel("Conv2D",h,d);return c?zr(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ca=ft({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=ht(e,"x","conv1d"),u=ht(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=zr(i,[1,i.shape[0],i.shape[1]])),A(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),A(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Lr("conv1d",r,o),A(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),A(Rr(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),A(Br(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),A(Br(n),(()=>"Error in conv1D: Stride should be larger than 0.")),A("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const p=zr(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=zr(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=la(h,p,[1,n],r,"NHWC",[1,s],o);return zr(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),pa=ft({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=zr(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),A(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),A(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),A(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?i[3]:i[1],p="NHWC"===s?u.shape[3]:u.shape[1];A(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),A(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Lr("conv2dDerInput",a,o);const h={dy:u,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},m=ot.runKernel("Conv2DBackpropInput",h,d);return l?zr(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ha=ft({conv2dTranspose_:function(e,t,n,r,a,s){const o=ht(e,"x","conv2dTranspose"),i=ht(t,"filter","conv2dTranspose");return pa(n,o,i,r,a,"NHWC",s)}}),da=ft({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=ht(e,"x","conv3d"),i=ht(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=zr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),A(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),A(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),A(Rr(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),A("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),A(Br(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),A(Br(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:i},p={strides:n,pad:r,dataFormat:a,dilations:s},h=ot.runKernel("Conv3D",c,p);return l?zr(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ma=ft({conv3DBackpropInput_:function(e,t,n,r,a){A(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=zr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=o.shape[4];A(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),A(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),A(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),A(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),A(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},p={pad:a,strides:r,inputShape:s},h=ot.runKernel("Conv3DBackpropInputV2",c,p);return i?zr(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),fa=ft({conv3dTranspose_:function(e,t,n,r,a){const s=ht(e,"x","conv3dTranspose"),o=ht(t,"filter","conv3dTranspose");return ma(n,s,o,r,a)}}),ga=ft({cos_:function(e){const t={x:ht(e,"x","cos","float32")};return ot.runKernel("Cos",t)}}),ya=ft({cosh_:function(e){const t={x:ht(e,"x","cosh","float32")};return ot.runKernel("Cosh",t)}}),ba=ft({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:ht(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return ot.runKernel("Cumprod",a,s)}}),wa=ft({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:ht(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ot.runKernel("Cumsum",a,s)}}),va=ft({denseBincount_:function(e,t,n,r=!1){const a=ht(e,"x","denseBincount"),s=ht(t,"weights","denseBincount");A("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),A(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),A(n>=0,(()=>`size must be non-negative, but got ${n}.`)),A(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return ot.runKernel("DenseBincount",o,i)}}),xa=ft({depthToSpace_:function(e,t,n="NHWC"){const r=ht(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];A(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),A(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),A(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),A(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return ot.runKernel("DepthToSpace",i,u)}}),Na=ft({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=ht(e,"x","depthwiseConv2d","float32"),u=ht(t,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=zr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),A(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const p="NHWC"===a?l.shape[3]:l.shape[1];A(p===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Lr("depthwiseConv2d",r,o);const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=ot.runKernel("DepthwiseConv2dNative",h,d);return c?zr(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Sa=ft({diag_:function(e){const t={x:ht(e,"x","diag")};return ot.runKernel("Diag",t)}}),Ta=ft({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=ht(e,"x","dilation2d"),i=ht(t,"filter","dilation2d");A(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),A(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),A("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=o,l=!1;3===o.rank&&(u=zr(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),A(u.shape[3]===i.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`));const c={x:u,filter:i},p={strides:n,pad:r,dilations:a},h=ot.runKernel("Dilation2D",c,p);return l?zr(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ka=ft({equal_:function(e,t){let n=ht(e,"a","equal","string_or_numeric"),r=ht(t,"b","equal","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("Equal",a)}}),Ea=ft({where_:function(e,t,n){const r=ht(t,"a","where"),a=ht(n,"b","where"),s=ht(e,"condition","where","bool"),o=Wn(Wn(s.shape,r.shape),a.shape),i={condition:na(s,o),t:na(r,o),e:na(a,o)};return ot.runKernel("Select",i)}}),_a=ft({divNoNan_:function(e,t){let n=ht(e,"a","div"),r=ht(t,"b","div");[n,r]=Qe(n,r);const a=_n(n,r),s=On(a),o=ka(r,s);return Ea(o,s,a)}}),Aa=ft({dot_:function(e,t){const n=ht(e,"t1","dot"),r=ht(t,"t2","dot");A(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(A(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=zr(n,[1,-1]),t=zr(r,[-1,1]),a=jr(e,t);return zr(a,[])}if(1===n.rank&&2===r.rank){const e=zr(n,[1,-1]),t=zr(r,[r.shape[0],r.shape[1]]),a=jr(e,t);return zr(a,[a.size])}if(2===n.rank&&1===r.rank){const e=zr(r,[-1,1]),t=jr(n,e);return zr(t,[t.size])}{const e=zr(r,[r.shape[0],r.shape[1]]);return jr(n,e)}}}),Ia=ft({einsum_:function(e,...t){const n=t.map(((e,t)=>ht(e,`tensors${t}`,"einsum"))),r={equation:e};return ot.runKernel("Einsum",n,r)}}),Ma=ft({elu_:function(e){const t={x:ht(e,"x","elu","float32")};return ot.runKernel("Elu",t)}}),Oa=ft({ensureShape_:function(e,t){const n=ht(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Da=ft({erf_:function(e){let t=ht(e,"x","erf");A("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=wn(t,"float32"));const n={x:t};return ot.runKernel("Erf",n)}});function Ca(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}(e,t.map((e=>1)),t)}const $a=ft({max_:function(e,t=null,n=!1){const r={x:ht(e,"x","max")},a={reductionIndices:t,keepDims:n};return ot.runKernel("Max",r,a)}}),Fa=ft({min_:function(e,t=null,n=!1){const r={x:ht(e,"x","min")},a={axis:t,keepDims:n};return ot.runKernel("Min",r,a)}}),Ra=ft({sum_:function(e,t=null,n=!1){let r=ht(e,"x","sum");"bool"===r.dtype&&(r=wn(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ot.runKernel("Sum",a,s)}});function Ba(e,t,n=null){if(0===e.rank)return jn(e);if(1!==e.rank&&null===n)return Ba(zr(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ra(jn(e),n);if(t===1/0)return $a(jn(e),n);if(t===-1/0)return Fa(jn(e),n);if("euclidean"===t||2===t)return In(Ra(Vn(jn(e),Cn(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return $a(Ra(jn(e),n[0]),n[1]-1);if(t===1/0)return $a(Ra(jn(e),n[1]),n[0]);if(t===-1/0)return Fa(Ra(jn(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return In(Ra(Mn(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const La=ft({norm_:function(e,t="euclidean",n=null,r=!1){const a=Ba(e=ht(e,"x","norm"),t,n);let s=a.shape;if(r){const t=F(n,e.shape);s=Ca(a.shape,t)}return zr(a,s)}}),za=ft({euclideanNorm_:function(e,t=null,n=!1){return La(e,"euclidean",t,n)}}),Pa=ft({exp_:function(e){const t={x:ht(e,"x","exp")};return ot.runKernel("Exp",t)}}),Va=ft({expandDims_:function(e,t=0){const n=ht(e,"x","expandDims","string_or_numeric");A(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return ot.runKernel("ExpandDims",r,a)}}),Ua=ft({expm1_:function(e){const t={x:ht(e,"x","expm1")};return ot.runKernel("Expm1",t)}}),ja=ft({tile_:function(e,t){const n=ht(e,"x","tile","string_or_numeric");A(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return ot.runKernel(ie,r,a)}}),Wa=ft({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=bn([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=zr(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return ja(Va(o,0),[n[0],1,1]);if(2===n.length)return ja(Va(Va(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return ja(Va(Va(Va(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),qa=ft({floor_:function(e){const t={x:ht(e,"x","floor","float32")};return ot.runKernel("Floor",t)}}),Ha=ft({gather_:function(e,t,n=0,r=0){const a={x:ht(e,"x","gather"),indices:ht(t,"indices","gather","int32")},s={axis:n,batchDims:r};return ot.runKernel("GatherV2",a,s)}}),Ka=ft({greater_:function(e,t){let n=ht(e,"a","greater","string_or_numeric"),r=ht(t,"b","greater","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("Greater",a)}}),Ga=ft({greaterEqual_:function(e,t){let n=ht(e,"a","greaterEqual","string_or_numeric"),r=ht(t,"b","greaterEqual","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("GreaterEqual",a)}}),Ya=ft({imag_:function(e){const t={input:ht(e,"input","imag")};return ot.runKernel("Imag",t)}}),Xa=ft({isFinite_:function(e){const t={x:ht(e,"x","isFinite")};return ot.runKernel("IsFinite",t)}}),Ja=ft({isInf_:function(e){const t={x:ht(e,"x","isInf")};return ot.runKernel("IsInf",t)}}),Za=ft({isNaN_:function(e){const t={x:ht(e,"x","isNaN")};return ot.runKernel("IsNan",t)}}),Qa=ft({leakyRelu_:function(e,t=.2){const n={x:ht(e,"x","leakyRelu")},r={alpha:t};return ot.runKernel("LeakyRelu",n,r)}}),es=ft({less_:function(e,t){let n=ht(e,"a","less","string_or_numeric"),r=ht(t,"b","less","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("Less",a)}}),ts=ft({lessEqual_:function(e,t){let n=ht(e,"a","lessEqual","string_or_numeric"),r=ht(t,"b","lessEqual","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("LessEqual",a)}});function ns(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ot.runKernel(se,{},r)}const rs=ft({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=ht(e,"x","localResponseNormalization");A(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),A(C(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=zr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},c=ot.runKernel("LRN",u,l);return i?zr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),as=ft({log_:function(e){const t={x:ht(e,"x","log","float32")};return ot.runKernel("Log",t)}}),ss=ft({log1p_:function(e){const t={x:ht(e,"x","log1p")};return ot.runKernel("Log1p",t)}}),os=ft({neg_:function(e){const t={x:ht(e,"x","neg")};return ot.runKernel("Neg",t)}}),is=ft({softplus_:function(e){const t={x:ht(e,"x","softplus")};return ot.runKernel("Softplus",t)}}),us=ft({logSigmoid_:function(e){const t=ht(e,"x","logSigmoid");return Dn((e=>({value:os(is(os(e))),gradFunc:t=>An(t,Wr(os(e)))})))(t)}}),ls=ft({logSoftmax_:function(e,t=-1){const n=ht(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Dn(((e,n)=>{const r=$a(e,t,!0),a=Un(e,r),s=Un(wn(a,"float32"),as(Ra(Pa(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Pa(r);return Un(e,An(Ra(e,t,!0),a))}}}));return r(n)}}),cs=ft({logSumExp_:function(e,t=null,n=!1){const r=ht(e,"x","logSumExp"),a=F(t,r.shape),s=$a(r,a,!0),o=Un(r,s),i=Pa(o),u=Ra(i,a),l=as(u),c=kn(zr(s,l.shape),l);if(n){const e=Ca(c.shape,a);return zr(c,e)}return c}}),ps=ft({logicalAnd_:function(e,t){const n=ht(e,"a","logicalAnd","bool"),r=ht(t,"b","logicalAnd","bool");Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("LogicalAnd",a)}}),hs=ft({logicalNot_:function(e){const t={x:ht(e,"x","logicalNot","bool")};return ot.runKernel("LogicalNot",t)}}),ds=ft({logicalOr_:function(e,t){const n=ht(e,"a","logicalOr","bool"),r=ht(t,"b","logicalOr","bool");Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("LogicalOr",a)}}),ms=ft({logicalXor_:function(e,t){const n=ht(e,"a","logicalXor","bool"),r=ht(t,"b","logicalXor","bool");return Wn(n.shape,r.shape),ps(ds(e,t),hs(ps(e,t)))}}),fs=2147483648,gs=ft({searchSorted_:function(e,t,n="left"){const r=ht(e,"sortedSequence","searchSorted"),a=ht(t,"values","searchSorted"),s=r.shape[r.shape.length-1],o=a.shape[a.shape.length-1],i=zr(r,[-1,s]),u=zr(a,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(O(u.shape)>=fs)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=fs)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return ot.runKernel("SearchSorted",l,c)}});function ys(e,t){return gs(e,t,"left")}const bs=ft({maxPool_:function(e,t,n,r,a){const s=ht(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=zr(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),A(Rr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Lr("maxPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=ot.runKernel("MaxPool",u,l);return i?zr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ws=ft({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=ht(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=zr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),A(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),A("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Lr("maxPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=ot.runKernel("MaxPool3D",l,c);return u?zr(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),vs=ft({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:ht(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=ot.runKernel("MaxPoolWithArgmax",s,o);return{result:i[0],indexes:i[1]}}}),xs=ft({mean_:function(e,t=null,n=!1){const r={x:ht(e,"x","mean")},a={axis:t,keepDims:n};return ot.runKernel("Mean",r,a)}});function Ns(e,t="float32"){if(H(e),"complex64"===t){const t=Ns(e,"float32"),n=Ns(e,"float32");return gt(t,n)}const n=q(O(e),t);return ot.makeTensor(n,e,t)}function Ss(e,t="float32"){if(H(e),"complex64"===t){const t=Ss(e,"float32"),n=Ns(e,"float32");return gt(t,n)}const n=W(O(e),t);return ot.makeTensor(n,e,t)}function Ts(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=ht(e,"x","meshgrid",e instanceof je?e.dtype:"float32");if(void 0===t)return[r];let a=ht(t,"y","meshgrid",t instanceof je?t.dtype:"float32");const s=O(r.shape),o=O(a.shape);return"xy"===n?(r=zr(r,[1,-1]),a=zr(a,[-1,1]),[jr(Ss([o,1],r.dtype),r),jr(a,Ss([1,s],a.dtype))]):(r=zr(r,[-1,1]),a=zr(a,[1,-1]),[jr(r,Ss([1,o],r.dtype)),jr(Ss([s,1],a.dtype),a)])}const ks=ft({minimum_:function(e,t){let n=ht(e,"a","minimum"),r=ht(t,"b","minimum");[n,r]=Qe(n,r),"bool"===n.dtype&&(n=wn(n,"int32"),r=wn(r,"int32")),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("Minimum",a)}}),Es=ft({mirrorPad_:function(e,t,n){A("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ht(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)A(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),A(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},o={x:r};return ot.runKernel("MirrorPad",o,s)}}),_s=ft({mod_:function(e,t){let n=ht(e,"a","mod"),r=ht(t,"b","mod");[n,r]=Qe(n,r);const a={a:n,b:r};return ot.runKernel("Mod",a)}}),As=ft({moments_:function(e,t=null,n=!1){const r=F(t,(e=ht(e,"x","moments")).shape),a=xs(e,r,n);let s=a.shape;n||(s=Ca(a.shape,r));const o=Mn(Un(wn(e,"float32"),zr(a,s)));return{mean:a,variance:xs(o,r,n)}}}),Is=ft({multiRNNCell_:function(e,t,n,r){const a=ht(t,"data","multiRNNCell"),s=dt(n,"c","multiRNNCell"),o=dt(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Ms=ft({multinomial_:function(e,t,n,r=!1){const a=ht(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?zr(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=ot.runKernel("Multinomial",i,u);return 1===o?zr(l,[l.size]):l}}),Os=ft({notEqual_:function(e,t){let n=ht(e,"a","notEqual","string_or_numeric"),r=ht(t,"b","notEqual","string_or_numeric");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("NotEqual",a)}}),Ds=ft({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:ht(e,"indices","oneHot","int32")},o={dtype:a,depth:t,onValue:n,offValue:r};return ot.runKernel("OneHot",s,o)}}),Cs=ft({onesLike_:function(e){const t={x:ht(e,"x","onesLike")};return ot.runKernel("OnesLike",t)}}),$s=ft({outerProduct_:function(e,t){const n=ht(e,"v1","outerProduct"),r=ht(t,"v2","outerProduct");A(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=zr(n,[-1,1]),s=zr(r,[1,-1]);return jr(a,s)}}),Fs=ft({pad_:function(e,t,n=0){const r=ht(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return ot.runKernel("PadV2",s,a)}}),Rs=ft({pad1d_:function(e,t,n=0){return A(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Fs(e,[t],n)}}),Bs=ft({pad2d_:function(e,t,n=0){return A(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Fs(e,t,n)}}),Ls=ft({pad3d_:function(e,t,n=0){return A(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Fs(e,t,n)}}),zs=ft({pad4d_:function(e,t,n=0){return A(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Fs(e,t,n)}}),Ps=ft({spaceToBatchND_:function(e,t,n){const r=ht(e,"x","spaceToBatchND");A(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),A(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),A(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return ot.runKernel("SpaceToBatchND",a,s)}}),Vs=ft({pool_:function(e,t,n,r,a,s,o){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=ht(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=zr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(Rr(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=function(e,t,n,r,a,s,o="channelsLast"){const[i,u]=Dr(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return Or(e,l,n,r,a,s,!1,o)}(u.shape,t,s,a,r),p=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],p):[[0,0],[0,0]];const d=1===p[0]&&1===p[1],[m,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([c.inHeight,c.inWidth],p,h),g=d?r:"valid",y=d?u:Ps(u,p,m),b=("avg"===n?()=>Pr(y,t,s,g,o):()=>bs(y,t,s,g,o))(),w=d?b:Gr(b,p,f);return l?zr(w,[w.shape[1],w.shape[2],w.shape[3]]):w}}),Us=ft({prelu_:function(e,t){const n={x:ht(e,"x","prelu"),alpha:ht(t,"alpha","prelu")};return ot.runKernel("Prelu",n)}}),js=ft({prod_:function(e,t=null,n=!1){let r=ht(e,"x","prod");"bool"===r.dtype&&(r=wn(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ot.runKernel("Prod",a,s)}}),Ws=ft({raggedGather_:function(e,t,n,r){const a={paramsNestedSplits:e.map(((e,t)=>ht(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:ht(t,"paramsDenseValues","raggedGather"),indices:ht(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},o=ot.runKernel("RaggedGather",a,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),qs=ft({raggedRange_:function(e,t,n){const r=ht(e,"starts","raggedRange"),a={starts:r,limits:ht(t,"limits","raggedRange",r.dtype),deltas:ht(n,"deltas","raggedRange",r.dtype)},s=ot.runKernel("RaggedRange",a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}}),Hs=ft({raggedTensorToTensor_:function(e,t,n,r,a){const s=ht(e,"shape","raggedTensorToTensor","int32"),o=ht(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:ht(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map(((e,t)=>ht(e,`tensors${t}`,"raggedTensorToTensor","int32")))},u={rowPartitionTypes:a};return ot.runKernel("RaggedTensorToTensor",i,u)}}),Ks=ft({rand_:function(e,t,n){H(e);const r=O(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ot.makeTensor(a,e,n)}});var Gs=n(377);class Ys{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Gs.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Xs{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Gs.alea(a.toString()),this.randn=new Ys(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Js{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gs.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Zs=ft({randomGamma_:function(e,t,n=1,r="float32",a){if(H(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Xs(t,n,r,a),o=bn(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),Qs=ft({randomNormal_:function(e,t=0,n=1,r,a){if(H(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Ys(t,n,r,!1,a),o=bn(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),eo=ft({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Qs(e,0,1,t,n)}}),to=ft({randomUniform_:function(e,t=0,n=1,r="float32",a){H(e);const s=bn(e,r),o=new Js(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}}),no=ft({randomUniformInt_:function(e,t,n,r){return to(e,t,n,"int32",r)}});function ro(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ot.runKernel(oe,{},a)}const ao=ft({real_:function(e){const t={input:ht(e,"input","real")};return ot.runKernel("Real",t)}}),so=ft({reciprocal_:function(e){const t={x:ht(e,"x","reciprocal")};return ot.runKernel("Reciprocal",t)}}),oo=ft({relu_:function(e){const t={x:ht(e,"x","relu")};return ot.runKernel("Relu",t)}}),io=ft({relu6_:function(e){const t={x:ht(e,"x","relu6")};return ot.runKernel("Relu6",t)}}),uo=ft({reverse_:function(e,t){const n={x:ht(e,"x","reverse")},r={dims:t};return ot.runKernel("Reverse",n,r)}}),lo=ft({reverse1d_:function(e){const t=ht(e,"x","reverse");return A(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),uo(t,0)}}),co=ft({reverse2d_:function(e,t){const n=ht(e,"x","reverse");return A(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),uo(n,t)}}),po=ft({reverse3d_:function(e,t){const n=ht(e,"x","reverse");return A(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),uo(n,t)}}),ho=ft({reverse4d_:function(e,t){const n=ht(e,"x","reverse");return A(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),uo(n,t)}}),mo=ft({round_:function(e){const t={x:ht(e,"x","round")};return ot.runKernel("Round",t)}}),fo=ft({rsqrt_:function(e){const t={x:ht(e,"x","rsqrt","float32")};return ot.runKernel("Rsqrt",t)}}),go=ft({selu_:function(e){const t={x:ht(e,"x","selu")};return ot.runKernel("Selu",t)}}),yo=ft({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=ht(e,"x","separableConv2d"),u=ht(t,"depthwiseFilter","separableConv2d"),l=ht(n,"pointwiseFilter","separableConv2d");let c=i,p=!1;if(3===i.rank&&(p=!0,c=zr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),A(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),A(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),A(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),A(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const h=u.shape[2],d=u.shape[3];A(l.shape[2]===h*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*d}, but got ${l.shape[2]}.`));const m=Na(c,u,r,a,o,s),f=la(m,l,1,"valid",o);return p?zr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),bo=async function(e,t){const n=ht(e,"x","setdiff1d"),r=ht(t,"y","setdiff1d");A(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),A(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),A(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new ze([i],n.dtype),l=new ze([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},wo=ft({sign_:function(e){const t={x:ht(e,"x","sign")};return ot.runKernel("Sign",t)}}),vo=ft({sin_:function(e){const t={x:ht(e,"x","sin","float32")};return ot.runKernel("Sin",t)}}),xo=ft({sinh_:function(e){const t={x:ht(e,"x","sinh")};return ot.runKernel("Sinh",t)}}),No=ft({slice1d_:function(e,t,n){const r=ht(e,"x","slice1d");return A(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),qr(r,[t],[n])}}),So=ft({slice2d_:function(e,t,n){const r=ht(e,"x","slice2d");return A(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),qr(r,t,n)}}),To=ft({slice3d_:function(e,t,n){const r=ht(e,"x","slice3d");return A(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),qr(r,t,n)}}),ko=ft({slice4d_:function(e,t,n){const r=ht(e,"x","slice4d");return A(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),qr(r,t,n)}}),Eo=ft({softmax_:function(e,t=-1){const n=ht(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ot.runKernel("Softmax",r,a)}}),_o=ft({fft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ot.runKernel("FFT",t)}}),Ao=ft({ifft_:function(e){A("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ot.runKernel("IFFT",t)}}),Io=ft({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=zr(e,[n,t]);r=Ao(a)}else{const a=[n,2*(t-1)],s=zr(ao(e),[n,t]),o=zr(Ya(e),[n,t]),i=uo(qr(s,[0,1],[n,t-2]),1),u=An(uo(qr(o,[0,1],[n,t-2]),1),Cn(-1)),l=Ur([s,i],1),c=Ur([o,u],1),p=zr(gt(l,c),[a[0],a[1]]);r=Ao(p)}if(r=ao(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=zr(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Mo=ft({split_:function(e,t,n=0){const r={x:ht(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ot.runKernel("SplitV",r,a)}}),Oo=ft({rfft_:function(e,t){A("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=qr(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Ur([e,Ns(r)],e.shape.length-1),n=t}else a=e;const s=On(a),o=zr(gt(a,s),[r,n]),i=_o(o),u=Math.floor(n/2)+1,l=ao(i),c=Ya(i),p=Mo(l,[u,n-u],l.shape.length-1),h=Mo(c,[u,n-u],c.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=u,zr(gt(p[0],h[0]),d)}}),Do=ft({squaredDifference_:function(e,t){let n=ht(e,"a","squaredDifference"),r=ht(t,"b","squaredDifference");[n,r]=Qe(n,r),Wn(n.shape,r.shape);const a={a:n,b:r};return ot.runKernel("SquaredDifference",a,{})}}),Co=ft({squeeze_:function(e,t){const n=ht(e,"x","squeeze","string_or_numeric");return zr(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:F(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}}),$o=ft({stack_:function(e,t=0){const n=dt(e,"tensors","stack","string_or_numeric");A(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&A(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return ot.runKernel("Pack",r,a)}}),Fo=ft({step_:function(e,t=0){const n={x:ht(e,"x","step")},r={alpha:t};return ot.runKernel("Step",n,r)}}),Ro=ft({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const l={x:ht(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return ot.runKernel("StridedSlice",l,c)}}),Bo=ft({tan_:function(e){const t={x:ht(e,"x","tan","float32")};return ot.runKernel("Tan",t)}});function Lo(e,t){M(e);const n=lt(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return yt(e,null,n,t)}function zo(e,t,n){if(M(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=lt(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return yt(e,t,r,n)}function Po(e,t,n){if(M(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=lt(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return yt(e,t,r,n)}function Vo(e,t,n){if(M(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=lt(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return yt(e,t,r,n)}function Uo(e,t,n){if(M(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=lt(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return yt(e,t=t||r,r,n)}function jo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}!function(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}(n,t,e)}const Wo=ft({tensorScatterUpdate_:function(e,t,n){const r=ht(e,"tensor","tensorScatterupdate"),a=ht(t,"indices","tensorScatterupdate","int32"),s=ht(n,"updates","tensorScatterupdate");if(jo(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);const o={tensor:r,indices:a,updates:s};return ot.runKernel("TensorScatterUpdate",o,{})}}),qo=ft({topk_:function(e,t=1,n=!0){const r=ht(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},o={k:t,sorted:n},[i,u]=ot.runKernel("TopK",s,o);return{values:i,indices:u}}}),Ho=ft({truncatedNormal_:function(e,t=0,n=1,r,a){if(H(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Ys(t,n,r,!0,a),o=bn(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),Ko=ft({unique_:function(e,t=0){const n=ht(e,"x","unique","string_or_numeric");A(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=ot.runKernel("Unique",r,a);return{values:s,indices:o}}}),Go=ft({unsortedSegmentSum_:function(e,t,n){const r=ht(e,"x","unsortedSegmentSum"),a=ht(t,"segmentIds","unsortedSegmentSum","int32");A(C(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return ot.runKernel("UnsortedSegmentSum",s,o)}}),Yo=ft({unstack_:function(e,t=0){const n=ht(e,"x","unstack","string_or_numeric");A(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return ot.runKernel("Unpack",r,a)}});function Xo(e,t){return gs(e,t,"right")}function Jo(e,t=!0,n,r){return ot.makeVariable(e,t,n,r)}const Zo=async function(e){const t=ht(e,"condition","whereAsync","bool"),n=await t.data(),r=function(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=bn(e,"int32"),a=bn([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}(t.shape,n);return e!==t&&t.dispose(),r},Qo=async function(e,t,n){const r=ht(e,"tensor","boolMask"),a=ht(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;A(o>0,(()=>"mask cannot be scalar")),I(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+o)),c=zr(r,l),p=zr(a,[-1]),h=await Zo(p),d=Co(h,[1]),m=Ha(c,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),c.dispose(),p.dispose(),h.dispose(),m},ei=ft({transpose_:function(e,t,n){const r=ht(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),A(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{A(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},s={perm:t};return"complex64"===r.dtype?Nn((()=>{let e=ao(r),t=Ya(r);return e=ot.runKernel(ue,{x:e},s),t=ot.runKernel(ue,{x:t},s),n&&(t=os(t)),gt(e,t)})):ot.runKernel(ue,a,s)}}),ti=ft({movingAverage_:function(e,t,n,r,a=!0){const s=ht(e,"v","movingAverage"),o=ht(t,"x","movingAverage"),i=ht(n,"decay","movingAverage");!function(e,t){A(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}(s,o),A(D(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=Cn(1),l=Un(u,i);let c=An(Un(o,s),l);if(a){A(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=ht(r,"step","movingAverage");c=_n(c,Un(u,Vn(i,e)))}return kn(s,c)}}),ni=ft({scatterND_:function(e,t,n){H(n);const r=ht(e,"indices","scatterND","int32"),a=ht(t,"updates","scatterND");jo(a,r,n);const s={indices:r,updates:a},o={shape:n};return ot.runKernel("ScatterNd",s,o)}}),ri=ft({sparseToDense_:function(e,t,n,r=0){H(n);const a=ht(e,"sparseIndices","sparseToDense","int32"),s=ht(t,"sparseValues","sparseToDense","string_or_numeric"),o=ht(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return ot.runKernel("SparseToDense",i,u)}}),ai=ft({gatherND_:function(e,t){const n=ht(t,"indices","gatherND","int32"),r={params:ht(e,"x","gatherND","string_or_numeric"),indices:n};return ot.runKernel("GatherNd",r)}}),si=ft({dropout_:function(e,t,n,r){const a=ht(e,"x","dropout");if(A("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),A(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof je?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(D(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=_n(qa(kn(to(s,0,1,"float32",r),o)),o);return An(a,i)}});function oi(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ii(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Lo(a,"float32")}const ui=async function(e,t,n=1){const r=ht(e,"predictions","inTopK"),a=ht(t,"targets","inTopK");A(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),A(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),I(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];A(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,l]=[o.length/s,s],c=function(e,t){return R("bool",t)}(0,u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),bt(c,a.shape,"bool")},li=ft({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=zr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=zr(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),A(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),A(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?i.shape[3]:i.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];A(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),A(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Lr("conv2dDerFilter",a,o);const p={x:i,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return ot.runKernel("Conv2DBackpropFilter",p,h)}});function ci(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return An(e,Fo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function pi(e,t){let n=t;const r=function(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}(e.shape,t.shape);return r.length>0&&(n=Ra(n,r)),zr(n,e.shape)}function hi(e,t,n,r){if("linear"===t)return e;if("relu"===t)return oo(e);if("elu"===t)return Ma(e);if("relu6"===t)return io(e);if("prelu"===t)return Us(e,n);if("leakyrelu"===t)return Qa(e,r);if("sigmoid"===t)return Wr(e);throw new Error(`Unknown fused activation ${t}.`)}const di=(e,t)=>!(e>0)||"linear"===t,mi=ft({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===di(ot.state.gradientDepth,u)){A("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=la(e,t,n,r,a,s,o);return null!=i&&(p=kn(p,i)),hi(p,u,l,c)}const p=ht(e,"x","conv2d","float32"),h=ht(t,"filter","conv2d","float32");let d=p,m=!1;3===p.rank&&(m=!0,d=zr(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),A(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Lr("fused conv2d",r,o);const f="NHWC"===a?d.shape[3]:d.shape[1];A(h.shape[2]===f,(()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${h.shape[2]}.`)),A(Rr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const g=Or(d.shape,h.shape,n,s,r,o);let y,b;if(null!=i&&(y=ht(i,"bias","fused conv2d"),[y]=Qe(y,p),"NHWC"===a?Wn(g.outShape,y.shape):(A(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),A(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(A(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)A(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Wn(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=ht(l,"prelu weights","fused conv2d")}const w=(e,t)=>{A("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[o,i,l,c]=t,p=ci(e,l,u);A(Fr(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[pa(i.shape,p,o,n,r),li(i,p,o.shape,n,r)];if(null!=c){const e=pi(c,p);h.push(e)}return h},v={x:d,filter:h,bias:y,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=Dn(((e,t,n)=>{let r=ot.runKernel(pe,v,x);return n([t,e,r]),m&&(r=zr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(d,h)}{const e=Dn(((e,t,n,r)=>{let a=ot.runKernel(pe,v,x);return r([t,e,a,n]),m&&(a=zr(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}}));return e(d,h,y)}}}),fi=ft({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=zr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=zr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return ot.runKernel("DepthwiseConv2dNativeBackpropFilter",l,c)}}),gi=ft({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=zr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},p=ot.runKernel("DepthwiseConv2dNativeBackpropInput",l,c);return u?zr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),yi=ft({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===di(ot.state.gradientDepth,u)){let p=Na(e,t,n,r,a,s,o);return null!=i&&(p=kn(p,i)),hi(p,u,l,c)}const p=ht(e,"x","depthwiseConv2d","float32"),h=ht(t,"filter","depthwiseConv2d","float32");let d=p,m=!1;3===p.rank&&(m=!0,d=zr(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),A(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),A(d.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),A(Rr(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Lr("fused depthwiseConv2d",r,o);const f=Or(d.shape,h.shape,n,s,r,o,!0);let g,y;null!=i&&(g=ht(i,"bias","fused conv2d"),[g]=Qe(g,p),Wn(f.outShape,g.shape)),null!=l&&(y=ht(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{A(Fr(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,l,c]=t,p=ci(e,l,u),h=gi(i.shape,p,a,n,r,s,o),d=fi(i,p,a.shape,n,r,s,o);return null!=c?[h,d,pi(g,p)]:[h,d]},w={x:d,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=Dn(((e,t,n)=>{let r=ot.runKernel(he,w,v);return n([t,e,r]),m&&(r=zr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,h)}{const e=Dn(((e,t,n,r)=>{let a=ot.runKernel(he,w,v);return r([t,e,a,n]),m&&(a=zr(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,h,g)}}}),bi=ft({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===di(ot.state.gradientDepth,s)){let u=jr(e,t,n,r);return null!=a&&(u=kn(u,a)),hi(u,s,o,i)}let u=ht(e,"a","fused matMul"),l=ht(t,"b","fused matMul");[u,l]=Qe(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),f=l.shape.slice(0,-2),g=O(m),y=O(f);A(c===p,(()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Wn(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([h,d]),w=zr(u,n?[g,c,h]:[g,h,c]),v=zr(l,r?[y,d,p]:[y,p,d]);let x,N;null!=a&&(x=ht(a,"bias","fused matMul"),[x]=Qe(x,u),Wn(b,x.shape)),null!=o&&(N=ht(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,i,u,l]=t,c=ci(zr(e,u.shape),u,s);let p,h;return n||r?!n&&r?(p=jr(c,i,!1,!1),h=jr(c,o,!0,!1)):n&&!r?(p=jr(i,c,!1,!0),h=jr(o,c,!1,!1)):(p=jr(i,c,!0,!0),h=jr(c,o,!0,!0)):(p=jr(c,i,!1,!0),h=jr(o,c,!0,!1)),null!=a?[p,h,pi(l,c)]:[p,h]},T={a:w,b:v,bias:x,preluActivationWeights:N},k={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};if(null==a){const e=Dn(((e,t,n)=>{const r=ot.runKernel(ce,T,k);return n([e,t,r]),{value:zr(r,b),gradFunc:S}}));return e(w,v)}{const e=Dn(((e,t,n,r)=>{const a=ot.runKernel(ce,T,k);return r([e,t,a,n]),{value:zr(a,b),gradFunc:S}}));return e(w,v,x)}}}),wi=ft({hammingWindow_:function(e){return ii(e,.54,.46)}}),vi=ft({hannWindow_:function(e){return ii(e,.5,.5)}}),xi=ft({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(qr(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Ur([qr(e,s,t-r),Pn([r],a)]);o.push(i),s+=n}return 0===o.length?zo([],[0,t]):zr(Ur(o),[o.length,t])}}),Ni=ft({stft_:function(e,t,n,r,a=vi){null==r&&(r=oi(t));const s=xi(e,t,n),o=An(s,a(t));return Oo(o,r)}}),Si=ft({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=ht(e,"image","cropAndResize"),i=ht(t,"boxes","cropAndResize","float32"),u=ht(n,"boxInd","cropAndResize","int32"),l=i.shape[0];A(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),A(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),A(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),A(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),A(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),A("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:o,boxes:i,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return ot.runKernel("CropAndResize",c,p)}}),Ti=ft({flipLeftRight_:function(e){const t=ht(e,"image","flipLeftRight","float32");A(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ot.runKernel("FlipLeftRight",n,{})}}),ki=ft({grayscaleToRGB_:function(e){const t=ht(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];A(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),A(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,ja(t,a)}}),Ei=ft({rotateWithOffset_:function(e,t,n=0,r=.5){const a=ht(e,"image","rotateWithOffset","float32");A(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return ot.runKernel("RotateWithOffset",s,o)}});function _i(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),A(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),A(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),A(1===t.rank,(()=>"scores must be a 1D tensor")),A(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),A(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Ai=ft({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=ht(e,"boxes","nonMaxSuppression","float32"),o=ht(t,"scores","nonMaxSuppression","float32"),i=_i(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return ot.runKernel("NonMaxSuppressionV3",{boxes:s,scores:o},u)}});function Ii(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||Mi)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Mi(e,t){return e>t?1:e<t?-1:0}function Oi(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort($i);const c=s>0?-.5/s:0,p=[],h=[];for(;p.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=p.length-1;n>=o;--n){const o=Di(e,s,p[n]);if(o>=r){i=!0;break}if(t.score=t.score*Ci(r,c,o),t.score<=a)break}t.suppressBeginIndex=p.length,i||(t.score===n?(p.push(s),h.push(t.score)):t.score>a&&Ii(l,t,$i))}const d=p.length,m=n-d;i&&m>0&&(p.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));const f={selectedIndices:p};return o&&(f.selectedScores=h),u&&(f.validOutputs=d),f}function Di(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),d=(i-s)*(u-o),m=(p-l)*(h-c);if(d<=0||m<=0)return 0;const f=Math.max(s,l),g=Math.max(o,c),y=Math.min(i,p),b=Math.min(u,h),w=Math.max(y-f,0)*Math.max(b-g,0);return w/(d+m-w)}function Ci(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function $i(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Fi=ft({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=ht(e,"boxes","nonMaxSuppression"),i=ht(t,"scores","nonMaxSuppression"),u=_i(o,i,n,r,a,s),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=ot.runKernel("NonMaxSuppressionV5",l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),Ri=ft({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=ht(e,"boxes","nonMaxSuppression"),i=ht(t,"scores","nonMaxSuppression"),u=_i(o,i,n,r,a,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=ot.runKernel("NonMaxSuppressionV4",l,c);return{selectedIndices:p[0],validOutputs:p[1]}}}),Bi=ft({resizeBilinear_:function(e,t,n=!1,r=!1){const a=ht(e,"images","resizeBilinear");A(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),A(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),A(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=zr(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ot.runKernel("ResizeBilinear",i,u);return o?zr(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Li=ft({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=ht(e,"images","resizeNearestNeighbor");A(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),A(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),A("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),A(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=zr(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=ot.runKernel("ResizeNearestNeighbor",i,u);return o?zr(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),zi=ft({threshold_:function(e,t="binary",n=!1,r=.5){const a=ht(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,i,u,l,c=An(Lo([r]),255);if(A(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),A(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),A("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),A("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,i,u]=Mo(a,[1,1,1],-1);const e=An(o,.2989),t=An(i,.587),n=An(u,.114);l=kn(kn(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,o,i,u=Lo([-1]),l=Lo([0]),c=Lo([0]);for(let p=0;p<e.size-1;p++){n=qr(e,0,p+1),r=qr(e,p+1),o=_n(Ra(n),t),i=_n(Ra(r),t);const h=Ra(An(n,ro(0,n.size)));a=_n(h,Ra(n));const d=Pn(r.shape,n.size),m=kn(ro(0,r.size),d),f=An(r,m);s=_n(Ra(f),Ra(r));const g=Un(a,s),y=Un(a,s),b=An(o,i);c=An(An(b,g),y);const w=Ka(c,l);l=Ea(w,c,l),u=Ea(w,Lo([p]),u)}return u}(Qr(wn(mo(l),"int32"),bt([]),256),s));const p=n?ts(l,c):Ka(l,c);return wn(An(p,255),"int32")}}),Pi=ft({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=ht(e,"image","transform","float32"),i=ht(t,"transforms","transform","float32");A(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),A(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ot.runKernel("Transform",u,l)}}),Vi=ft({bandPart_:function(e,t,n){const r=ht(e,"a","bandPart");A(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);let i,u;"number"==typeof t?(A(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),A(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),i=ht(t<0?s:t,"numLower","bandPart")):(A("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=Ea(es(t,0),s,ks(t,s))),"number"==typeof n?(A(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),A(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),u=ht(n<0?o:n,"numUpper","bandPart")):(A("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=Ea(es(n,0),o,ks(n,o)));const l=zr(ro(0,s,1,"int32"),[-1,1]),c=ro(0,o,1,"int32"),p=Un(l,c),h=ps(ts(p,i),Ga(p,os(u))),d=Ns([s,o],r.dtype);return zr($o(Yo(zr(r,[-1,s,o])).map((e=>Ea(h,e,d)))),a)}}),Ui=ft({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,A(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)A(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Mo(e,e.shape[0],0).map((e=>Co(e,[0])));A(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ot.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=An(Ra(An(n[r],e)),n[r]);e=Un(e,t)}return _n(e,La(e,"euclidean"))})));return t?$o(n,0):n}});function ji(e,t=!1){return ot.tidy((()=>{A(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Wa(n),s=vn(e);const o=zo([[1]],[1,1]);let i=vn(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=ot.tidy((()=>{const t=qr(s,[e,e],[n-e,1]),u=La(t),l=qr(s,[e,e],[1,1]),c=Ea(Ka(l,0),zo([[-1]]),zo([[1]])),p=Un(l,An(c,u)),h=_n(t,p);i=1===h.shape[0]?vn(o):Ur([o,qr(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=os(_n(jr(c,p),u)),m=qr(s,[e,0],[n-e,r]),f=An(d,i),g=ei(i);if(0===e)s=Un(m,jr(f,jr(g,m)));else{const t=Un(m,jr(f,jr(g,m)));s=Ur([qr(s,[0,0],[e,r]),t],0)}const y=ei(f),b=qr(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Un(b,jr(jr(b,i),y));else{const t=Un(b,jr(jr(b,i),y));a=Ur([qr(a,[0,0],[n,e]),t],1)}return[i,s,a]})),Sn([t,u,l])}return!t&&n>r&&(a=qr(a,[0,0],[n,r]),s=qr(s,[0,0],[r,r])),[a,s]}))}const Wi=ft({qr_:function(e,t=!1){if(A(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ji(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Yo(zr(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ji(e,t);a.push(n),s.push(r)})),[zr($o(a,0),e.shape),zr($o(s,0),e.shape)]}}});var qi;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(qi||(qi={}));const Hi=ft({computeWeightedLoss_:function(e,t,n=qi.SUM_BY_NONZERO_WEIGHTS){const r=ht(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=ht(t,"weights","computeWeightedLoss"));const s=null==a?r:An(r,a);if(n===qi.NONE)return s;if(n===qi.SUM)return Ra(s);if(n===qi.MEAN){if(null==a)return xs(s);{const e=r.size/a.size,t=_n(Ra(s),Ra(a));return e>1?_n(t,Cn(e)):t}}if(n===qi.SUM_BY_NONZERO_WEIGHTS){if(null==a)return _n(Ra(s),Cn(r.size));{const e=An(a,Ss(r.shape)),t=wn(Ra(Os(e,Cn(0))),"float32");return _n(Ra(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Ki=ft({absoluteDifference_:function(e,t,n,r=qi.SUM_BY_NONZERO_WEIGHTS){const a=ht(e,"labels","absoluteDifference"),s=ht(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=ht(n,"weights","absoluteDifference")),I(a.shape,s.shape,"Error in absoluteDifference: ");const i=jn(Un(a,s));return Hi(i,o,r)}}),Gi=ft({cosineDistance_:function(e,t,n,r,a=qi.SUM_BY_NONZERO_WEIGHTS){const s=ht(e,"labels","cosineDistance"),o=ht(t,"predictions","cosineDistance");let i=null;null!=r&&(i=ht(r,"weights","cosineDistance")),I(s.shape,o.shape,"Error in cosineDistance: ");const u=Cn(1),l=Un(u,Ra(An(s,o),n,!0));return Hi(l,i,a)}}),Yi=ft({hingeLoss_:function(e,t,n,r=qi.SUM_BY_NONZERO_WEIGHTS){let a=ht(e,"labels","hingeLoss");const s=ht(t,"predictions","hingeLoss");let o=null;null!=n&&(o=ht(n,"weights","hingeLoss")),I(a.shape,s.shape,"Error in hingeLoss: ");const i=Cn(1);a=Un(An(Cn(2),a),i);const u=oo(Un(i,An(a,s)));return Hi(u,o,r)}}),Xi=ft({huberLoss_:function(e,t,n,r=1,a=qi.SUM_BY_NONZERO_WEIGHTS){const s=ht(e,"labels","huberLoss"),o=ht(t,"predictions","huberLoss");let i=null;null!=n&&(i=ht(n,"weights","huberLoss")),I(s.shape,o.shape,"Error in huberLoss: ");const u=Cn(r),l=jn(Un(o,s)),c=ks(l,u),p=Un(l,c),h=kn(An(Cn(.5),Mn(c)),An(u,p));return Hi(h,i,a)}}),Ji=ft({logLoss_:function(e,t,n,r=1e-7,a=qi.SUM_BY_NONZERO_WEIGHTS){const s=ht(e,"labels","logLoss"),o=ht(t,"predictions","logLoss");let i=null;null!=n&&(i=ht(n,"weights","logLoss")),I(s.shape,o.shape,"Error in logLoss: ");const u=Cn(1),l=Cn(r),c=os(An(s,as(kn(o,l)))),p=An(Un(u,s),as(kn(Un(u,o),l))),h=Un(c,p);return Hi(h,i,a)}}),Zi=ft({meanSquaredError_:function(e,t,n,r=qi.SUM_BY_NONZERO_WEIGHTS){const a=ht(e,"labels","meanSquaredError"),s=ht(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=ht(n,"weights","meanSquaredError")),I(a.shape,s.shape,"Error in meanSquaredError: ");const i=Do(a,s);return Hi(i,o,r)}}),Qi=ft({sigmoidCrossEntropy_:function(e,t,n,r=0,a=qi.SUM_BY_NONZERO_WEIGHTS){let s=ht(e,"multiClassLabels","sigmoidCrossEntropy");const o=ht(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=ht(n,"weights","sigmoidCrossEntropy")),I(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Cn(r),t=Cn(1),n=Cn(.5);s=kn(An(s,Un(t,e)),An(n,e))}const u=function(e,t){const n=ht(e,"labels","sigmoidCrossEntropyWithLogits"),r=ht(t,"logits","sigmoidCrossEntropyWithLogits");I(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=oo(r),s=An(r,n),o=ss(Pa(os(jn(r))));return kn(Un(a,s),o)}(s,o);return Hi(u,i,a)}}),eu=ft({softmaxCrossEntropy_:function(e,t,n,r=0,a=qi.SUM_BY_NONZERO_WEIGHTS){let s=ht(e,"onehotLabels","softmaxCrossEntropy");const o=ht(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=ht(n,"weights","softmaxCrossEntropy")),I(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Cn(r),t=Cn(1),n=Cn(s.shape[1]);s=kn(An(s,Un(t,e)),_n(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Dn(((e,t,r)=>{const a=cs(t,[n],!0),s=Un(wn(t,"float32"),a);r([e,s]);const o=os(An(s,e));return{value:Ra(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Ca(e.shape,[n]);return[An(zr(e,s),Un(wn(r,"float32"),Pa(a))),An(zr(e,s),Un(Pa(a),wn(r,"float32")))]}}}));return r(e,t)}(s,o);return Hi(u,i,a)}}),tu=ft({sparseFillEmptyRows_:function(e,t,n,r){const a=ht(e,"indices","sparseFillEmptyRows","int32"),s=ht(t,"values","sparseFillEmptyRows"),o=ht(n,"denseShape","sparseFillEmptyRows","int32"),i=ht(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:a,values:s,denseShape:o,defaultValue:i},l=ot.runKernel("SparseFillEmptyRows",u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),nu=ft({sparseReshape_:function(e,t,n){const r=ht(e,"inputIndices","sparseReshape","int32"),a=ht(t,"inputShape","sparseReshape","int32"),s=ht(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=ot.runKernel("SparseReshape",o);return{outputIndices:i[0],outputShape:i[1]}}}),ru=ft({sparseSegmentMean_:function(e,t,n){const r=ht(e,"data","sparseSegmentMean"),a=ht(t,"indices","sparseSegmentMean","int32"),s=ht(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return ot.runKernel("SparseSegmentMean",o)}}),au=ft({sparseSegmentSum_:function(e,t,n){const r=ht(e,"data","sparseSegmentSum"),a=ht(t,"indices","sparseSegmentSum","int32"),s=ht(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return ot.runKernel("SparseSegmentSum",o)}}),su=ft({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=ht(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=ht(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},p={data:u,dataSplits:l},h=ot.runKernel("StringNGrams",p,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),ou={fft:_o,ifft:Ao,rfft:Oo,irfft:Io},iu={hammingWindow:wi,hannWindow:vi,frame:xi,stft:Ni},uu={flipLeftRight:Ti,grayscaleToRGB:ki,resizeNearestNeighbor:Li,resizeBilinear:Bi,rotateWithOffset:Ei,cropAndResize:Si,nonMaxSuppression:Ai,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=ht(e,"boxes","nonMaxSuppressionAsync"),o=ht(t,"scores","nonMaxSuppressionAsync"),i=_i(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:p}=function(e,t,n,r,a){return Oi(e,t,n,r,a,0)}(l,c,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Lo(p,"int32")},nonMaxSuppressionWithScore:Fi,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=ht(e,"boxes","nonMaxSuppressionAsync"),i=ht(t,"scores","nonMaxSuppressionAsync"),u=_i(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],p=l[1],{selectedIndices:h,selectedScores:d}=function(e,t,n,r,a,s){return Oi(e,t,n,r,a,s,!0)}(c,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Lo(h,"int32"),selectedScores:Lo(d)}},nonMaxSuppressionPadded:Ri,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=ht(e,"boxes","nonMaxSuppressionAsync"),i=ht(t,"scores","nonMaxSuppressionAsync"),u=_i(o,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[h,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:f}=function(e,t,n,r,a,s){return Oi(e,t,n,r,a,0,!1,s,!0)}(h,d,l,c,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Lo(m,"int32"),validOutputs:Cn(f,"int32")}},threshold:zi,transform:Pi},lu={bandPart:Vi,gramSchmidt:Ui,qr:Wi},cu={absoluteDifference:Ki,computeWeightedLoss:Hi,cosineDistance:Gi,hingeLoss:Yi,huberLoss:Xi,logLoss:Ji,meanSquaredError:Zi,sigmoidCrossEntropy:Qi,softmaxCrossEntropy:eu},pu={sparseFillEmptyRows:tu,sparseReshape:nu,sparseSegmentMean:ru,sparseSegmentSum:au},hu={stringNGrams:su,stringSplit:ft({stringSplit_:function(e,t,n=!0){const r=ht(e,"input","stringSplit","string"),a=ht(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=ot.runKernel("StringSplit",o,s);return{indices:i[0],values:i[1],shape:i[2]}}}),stringToHashBucketFast:ft({stringToHashBucketFast_:function(e,t){const n=ht(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ot.runKernel("StringToHashBucketFast",a,r)}}),staticRegexReplace:ft({staticRegexReplace_:function(e,t,n,r=!0){const a=ht(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return ot.runKernel("StaticRegexReplace",{x:a},s)}})};var du,mu;!function(){for(const e of Kn)Ln(e)}(),J().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(du||(du={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(mu||(mu={}));const fu={};function gu(e){return fu[e]}function yu(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return bu(t.inputNames[i],n,r,a);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>bu(e,n,r,a)))}const u=bu(t.inputNames[i],n,r,a),l=u.dataSync();return"number"===s.type?l[0]:j(u.shape,l)}const o=t.attrParams[e];return o&&o.value}function bu(e,t,n,r){const[a,s]=Nu(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[xu(a,e)]));return void 0!==o?t[xu(a,o)][s]:void 0}function wu(e,t,n){return t[xu(e,n.currentContextId)]}function vu(e,t){const[n,r,a]=Nu(e,t);return[xu(n,t&&t.currentContextId),r,a]}function xu(e,t){return t?`${e}-${t}`:e}function Nu(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function Su(e,t,n){let r=yu("pad",e,t,n);if("explicit"===r){r=yu("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function Tu(e){return e.kept?e:vn(e)}const ku=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Eu=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_u=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Au=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Iu=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Mu=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ou=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Du=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Cu=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$u=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Fu=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Ru=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Bu=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Lu=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],zu=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Pu=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Vu=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Uu=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ju=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Wu{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,s,o,i,u,l,c,p,h,d,m,f,g,y,b,w,v,x,N].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=vu(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=vu(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=vu(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=gu(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Hu(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hu(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=nl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=nl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Gu(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Gu(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=tl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=tl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Ku(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ku(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=al(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=al(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=el(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=el(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=rl(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=rl(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Ju(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ju(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Zu(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Zu(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Xu(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Xu(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=vu(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Yu(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=vu(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=vu(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function qu(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=J().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Hu(e,t,n,r=!1){const a=e[t];return null!=a?qu(a.s,r):n}function Ku(e,t,n){const r=e[t];return r?r.b:n}function Gu(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Yu(e){switch("string"==typeof e&&(e=du[e]),e){case du.DT_FLOAT:case du.DT_HALF:return"float32";case du.DT_INT32:case du.DT_INT64:case du.DT_INT8:case du.DT_UINT8:return"int32";case du.DT_BOOL:return"bool";case du.DT_DOUBLE:return"float32";case du.DT_STRING:return"string";default:return null}}function Xu(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Ju(e,t,n){const r=e[t];return r&&r.type?Yu(r.type):n}function Zu(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Yu(e))):n}function Qu(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function el(e,t,n){const r=e[t];return r&&r.shape?Qu(r.shape):n}function tl(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function nl(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>qu(e,r))):n}function rl(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Qu(e))):n}function al(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class sl{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return bu(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return bu(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Gu(this.node.rawAttrs,e,t);if(null!=n.s)return Hu(this.node.rawAttrs,e,t);if(null!=n.b)return Ku(this.node.rawAttrs,e,t);if(null!=n.shape)return el(this.node.rawAttrs,e,t);if(null!=n.type)return Ju(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return tl(this.node.rawAttrs,e,t);if(null!=n.list.s)return nl(this.node.rawAttrs,e,t);if(null!=n.list.shape)return rl(this.node.rawAttrs,e,t);if(null!=n.list.b)return al(this.node.rawAttrs,e,t);if(null!=n.list.type)return Zu(this.node.rawAttrs,e,t)}return t}}function ol(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){A(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];A(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function il(e){return"number"!=typeof e&&!e.some((e=>e<0))}function ul(e,t,n){let r=ll(e,n);const a=!il(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=ll(e.shape,r)})),!il(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function ll(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class cl{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Cn(0),Tn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ol(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Tn(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return bt([],[0].concat(this.elementShape));const n=this.readMany(e);return ol(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),$o(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return bt([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return ol(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ur(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Yo(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Nn((()=>{t=zr(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=zr(qr(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class pl{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ol(t,e.shape,"TensorList shape mismatch: "),Tn(e)})),this.idTensor=Cn(0),this.maxNumElements=r,Tn(this.idTensor)}copy(){return new pl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ol(e,this.elementShape,"TensorList shape mismatch: ");const r=ul(this.elementShape,this.tensors,e);return Nn((()=>{const e=this.tensors.map((e=>zr(e,r)));return $o(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ul(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ol(r.shape,e,"TensorList shape mismatch: "),zr(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ol(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Tn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new pl([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ol(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=ul(this.elementShape,this.tensors,t);return zr(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ol(this.elementShape,t.shape,"TensorList shape mismatch: "),Tn(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ol(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=ul(this.elementShape,this.tensors,n);return 0===e.length?bt([],[0].concat(r)):Nn((()=>{const t=e.map((e=>zr(this.tensors[e],r)));return $o(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ol(this.elementShape,t,"TensorList shape mismatch: ");const n=ul(this.elementShape,this.tensors,t);return 0===this.size()?bt([],[0].concat(n)):Nn((()=>{const e=this.tensors.map((e=>zr(e,n)));return Ur(e,0)}))}}function hl(e,t,n){const[r,a]=yu("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,l=yu("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=yu("strides",e,t,n),p=Su(e,t,n),h=yu("dataFormat",e,t,n).toUpperCase(),d=yu("dilations",e,t,n);let[m,f]=yu("args",e,t,n);return o&&(f=m,m=void 0),{stride:c,pad:p,dataFormat:h,dilations:d,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:yu("leakyreluAlpha",e,t,n)}}function dl(e,t,n){return{boxes:yu("boxes",e,t,n),scores:yu("scores",e,t,n),maxOutputSize:yu("maxOutputSize",e,t,n),iouThreshold:yu("iouThreshold",e,t,n),scoreThreshold:yu("scoreThreshold",e,t,n),softNmsSigma:yu("softNmsSigma",e,t,n)}}class ml{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Cn(0),this.tensorMap=new Map,Tn(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Cn(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Nn((()=>{const e=Yo(t),r=n.length,a=e.length;A(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Tn(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Nn((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return $o(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function fl(e,t,n,r,a=Nn){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(yu("a",e,t,n),yu("b",e,t,n))];case"AddN":return[r.addN(yu("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(yu("a",e,t,n),yu("b",e,t,n))];case"Mul":return[r.mul(yu("a",e,t,n),yu("b",e,t,n))];case"RealDiv":case"Div":return[r.div(yu("a",e,t,n),yu("b",e,t,n))];case"DivNoNan":return[r.divNoNan(yu("a",e,t,n),yu("b",e,t,n))];case"FloorDiv":return[r.floorDiv(yu("a",e,t,n),yu("b",e,t,n))];case"Sub":return[r.sub(yu("a",e,t,n),yu("b",e,t,n))];case"Minimum":return[r.minimum(yu("a",e,t,n),yu("b",e,t,n))];case"Maximum":return[r.maximum(yu("a",e,t,n),yu("b",e,t,n))];case"Pow":return[r.pow(yu("a",e,t,n),yu("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(yu("a",e,t,n),yu("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(yu("x",e,t,n))];case"Acos":return[r.acos(yu("x",e,t,n))];case"Acosh":return[r.acosh(yu("x",e,t,n))];case"Asin":return[r.asin(yu("x",e,t,n))];case"Asinh":return[r.asinh(yu("x",e,t,n))];case"Atan":return[r.atan(yu("x",e,t,n))];case"Atan2":return[r.atan2(yu("x",e,t,n),yu("y",e,t,n))];case"Atanh":return[r.atanh(yu("x",e,t,n))];case"Ceil":return[r.ceil(yu("x",e,t,n))];case"Complex":return[r.complex(yu("real",e,t,n),yu("imag",e,t,n))];case"Cos":return[r.cos(yu("x",e,t,n))];case"Cosh":return[r.cosh(yu("x",e,t,n))];case"Elu":return[r.elu(yu("x",e,t,n))];case"Erf":return[r.erf(yu("x",e,t,n))];case"Exp":return[r.exp(yu("x",e,t,n))];case"Expm1":return[r.expm1(yu("x",e,t,n))];case"Floor":return[r.floor(yu("x",e,t,n))];case"Log":return[r.log(yu("x",e,t,n))];case"Log1p":return[r.log1p(yu("x",e,t,n))];case"Imag":return[r.imag(yu("x",e,t,n))];case"Neg":return[r.neg(yu("x",e,t,n))];case"Reciprocal":return[r.reciprocal(yu("x",e,t,n))];case"Real":return[r.real(yu("x",e,t,n))];case"Relu":return[r.relu(yu("x",e,t,n))];case"Round":return[r.round(yu("x",e,t,n))];case"Selu":return[r.selu(yu("x",e,t,n))];case"Sigmoid":return[r.sigmoid(yu("x",e,t,n))];case"Sin":return[r.sin(yu("x",e,t,n))];case"Sign":return[r.sign(yu("x",e,t,n))];case"Sinh":return[r.sinh(yu("x",e,t,n))];case"Softplus":return[r.softplus(yu("x",e,t,n))];case"Sqrt":return[r.sqrt(yu("x",e,t,n))];case"Square":return[r.square(yu("x",e,t,n))];case"Tanh":return[r.tanh(yu("x",e,t,n))];case"Tan":return[r.tan(yu("x",e,t,n))];case"ClipByValue":return[r.clipByValue(yu("x",e,t,n),yu("clipValueMin",e,t,n),yu("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(yu("x",e,t,n))];case"Rsqrt":return[r.rsqrt(bu(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(yu("x",e,t,n),yu("alpha",e,t,n))];case"Prelu":return[r.prelu(yu("x",e,t,n),yu("alpha",e,t,n))];case"IsNan":return[r.isNaN(bu(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(bu(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(bu(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=yu("thenBranch",e,t,n),a=yu("elseBranch",e,t,n),s=yu("cond",e,t,n),o=yu("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=yu("body",e,t,n),a=yu("cond",e,t,n),s=yu("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Tu(yu("pred",e,t,n))];case"Switch":{const r=yu("pred",e,t,n);let a=yu("data",e,t,n);return a.kept||(a=Tu(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==bu(e,t,n)));return r?[Tu(bu(r,t,n))]:void 0}case"Enter":{const r=yu("frameName",e,t,n),a=yu("tensor",e,t,n);return n.enterFrame(r),[Tu(a)]}case"Exit":{const r=yu("tensor",e,t,n);return n.exitFrame(),[Tu(r)]}case"NextIteration":{const r=yu("tensor",e,t,n);return n.nextIteration(),[Tu(r)]}case"TensorArrayV3":{const r=yu("size",e,t,n),a=yu("dtype",e,t,n),s=yu("elementShape",e,t,n),o=yu("dynamicSize",e,t,n),i=yu("clearAfterRead",e,t,n),u=yu("identicalElementShapes",e,t,n),l=yu("name",e,t,n),c=new cl(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,Cn(1)]}case"TensorArrayWriteV3":{const r=yu("tensorArrayId",e,t,n),a=yu("index",e,t,n),s=yu("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=yu("tensorArrayId",e,t,n),a=yu("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=yu("tensorArrayId",e,t,n),a=yu("indices",e,t,n),s=yu("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=yu("tensorArrayId",e,t,n),a=yu("indices",e,t,n),s=yu("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=yu("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=yu("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=yu("tensorArrayId",e,t,n),a=yu("tensor",e,t,n),s=yu("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=yu("tensorArrayId",e,t,n);return[Cn(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=yu("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=yu("tensorListId",e,t,n),a=yu("index",e,t,n),s=yu("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=yu("tensorListId",e,t,n),a=yu("index",e,t,n),s=yu("elementShape",e,t,n),o=yu("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=yu("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new pl([],n,e.dtype,r),o=Yo(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(yu("tensor",e,t,n),r,yu("elementShape",e,t,n),yu("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=yu("elementShape",e,t,n),a=yu("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=yu(s,e,t,n),i=function(e,t,n,r){return new pl([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=yu("tensorListId",e,t,n),a=yu("indices",e,t,n),s=yu("elementShape",e,t,n),o=yu("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=yu("tensorListId",e,t,n),a=yu("elementShape",e,t,n),s=yu("elementDType",e,t,n),o=yu("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ol(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Yo(e);return new pl(a,t,r)}(yu("tensor",e,t,n),yu("elementShape",e,t,n),yu("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=yu("tensorListId",e,t,n),a=n.getTensorList(r.id),s=yu("dtype",e,t,n),o=yu("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=yu("tensorListId",e,t,n),a=yu("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=yu("tensorListId",e,t,n),a=yu("elementShape",e,t,n),s=yu("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=yu("tensor",e,t,n),a=yu("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=ll(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Nn((()=>{const n=[];e=zr(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=zr(qr(e,i,u),s)}return e.dispose(),n})),u=new pl([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,yu("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=yu("tensorListId",e,t,n);return[Cn(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=yu("tensorListId",e,t,n),a=yu("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Conv1D":{const a=yu("stride",e,t,n),s=yu("pad",e,t,n),o=yu("dataFormat",e,t,n).toUpperCase(),i=yu("dilation",e,t,n);return[r.conv1d(yu("x",e,t,n),yu("filter",e,t,n),a,s,o,i)]}case"Conv2D":{const a=yu("strides",e,t,n),s=Su(e,t,n),o=yu("dataFormat",e,t,n).toUpperCase(),i=yu("dilations",e,t,n);return[r.conv2d(yu("x",e,t,n),yu("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=hl(e,t,n);return[r.fused.conv2d({x:yu("x",e,t,n),filter:yu("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=hl(e,t,n);return[r.fused.depthwiseConv2d({x:yu("x",e,t,n),filter:yu("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=yu("outputShape",e,t,n),s=yu("strides",e,t,n),o=Su(e,t,n);return[r.conv2dTranspose(yu("x",e,t,n),yu("filter",e,t,n),a,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=yu("strides",e,t,n),s=Su(e,t,n),o=yu("dilations",e,t,n),i=yu("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(yu("input",e,t,n),yu("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("dataFormat",e,t,n).toUpperCase(),i=yu("dilations",e,t,n);return[r.conv3d(yu("x",e,t,n),yu("filter",e,t,n),[a[1],a[2],a[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("kernelSize",e,t,n);return[r.avgPool(yu("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPool":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("kernelSize",e,t,n);return[r.maxPool(yu("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("kernelSize",e,t,n),i=yu("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(yu("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s,i);return[u,l]}case"AvgPool3D":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("kernelSize",e,t,n);return[r.avgPool3d(yu("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("kernelSize",e,t,n);return[r.maxPool3d(yu("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{const a=yu("strides",e,t,n),s=yu("pad",e,t,n),o=yu("dilations",e,t,n),i=a[1],u=a[2],l=o[1],c=o[2];return[r.dilation2d(yu("x",e,t,n),yu("filter",e,t,n),[i,u],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Fill":{const a=yu("shape",e,t,n),s=yu("dtype",e,t,n),o=yu("value",e,t,n);return[r.fill(a,o,s)]}case"LinSpace":{const a=yu("start",e,t,n),s=yu("stop",e,t,n),o=yu("num",e,t,n);return[r.linspace(a,s,o)]}case"Multinomial":{const a=yu("logits",e,t,n),s=yu("numSamples",e,t,n),o=yu("seed",e,t,n);return[r.multinomial(a,s,o)]}case"OneHot":{const a=yu("indices",e,t,n),s=yu("depth",e,t,n),o=yu("onValue",e,t,n),i=yu("offValue",e,t,n),u=yu("dtype",e,t,n);return[r.oneHot(a,s,o,i,u)]}case"Ones":return[r.ones(yu("shape",e,t,n),yu("dtype",e,t,n))];case"OnesLike":return[r.onesLike(yu("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(yu("shape",e,t,n),yu("dtype",e,t,n),yu("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(yu("shape",e,t,n),yu("minval",e,t,n),yu("maxval",e,t,n),yu("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(yu("shape",e,t,n),yu("minval",e,t,n),yu("maxval",e,t,n),yu("seed",e,t,n))];case"Range":{const a=yu("start",e,t,n),s=yu("stop",e,t,n),o=yu("step",e,t,n);return[r.range(a,s,o,yu("dtype",e,t,n))]}case"TruncatedNormal":{const a=yu("shape",e,t,n),s=yu("mean",e,t,n),o=yu("stdDev",e,t,n),i=yu("seed",e,t,n);return[r.truncatedNormal(a,s,o,yu("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(yu("shape",e,t,n),yu("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(yu("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=S)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=dl(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(r,s,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=dl(e,t,n),l=yu("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(r,s,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=dl(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,o,i,u)]}case"Where":{const r=a.cast(yu("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(yu("x",e,t,n),yu("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"LowerBound":{const a=yu("sortedSequence",e,t,n),s=yu("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{const a=yu("x",e,t,n),s=yu("k",e,t,n),o=yu("sorted",e,t,n),i=r.topk(a,s,o);return[i.values,i.indices]}case"UpperBound":{const a=yu("sortedSequence",e,t,n),s=yu("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{const a=yu("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{const a=yu("x",e,t,n),s=yu("axis",e,t,n),o=r.unique(a,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"ResizeBilinear":{const a=yu("images",e,t,n),s=yu("size",e,t,n),o=yu("alignCorners",e,t,n),i=yu("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const a=yu("images",e,t,n),s=yu("size",e,t,n),o=yu("alignCorners",e,t,n),i=yu("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],o,i)]}case"CropAndResize":{const a=yu("image",e,t,n),s=yu("boxes",e,t,n),o=yu("boxInd",e,t,n),i=yu("cropSize",e,t,n),u=yu("method",e,t,n),l=yu("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,o,i,u,l)]}case"ImageProjectiveTransformV3":{const a=yu("images",e,t,n),s=yu("transforms",e,t,n),o=yu("outputShape",e,t,n),i=yu("fillValue",e,t,n),u=yu("interpolation",e,t,n),l=yu("fillMode",e,t,n);return[r.image.transform(a,s,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=yu("default",e,t,n);return[bu(e.name,t,n)||a];case"Placeholder":return[bu(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Tu(yu("x",e,t,n))];case"IdentityN":return yu("x",e,t,n).map((e=>Tu(e)));case"Shape":return[r.tensor1d(yu("x",e,t,n).shape,"int32")];case"ShapeN":return yu("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(yu("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(yu("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const s=yu("x",e,t,n),o=yu("data",e,t,n),i=yu("message",e,t,n),u=yu("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Equal":return[r.equal(yu("a",e,t,n),yu("b",e,t,n))];case"NotEqual":return[r.notEqual(yu("a",e,t,n),yu("b",e,t,n))];case"Greater":return[r.greater(yu("a",e,t,n),yu("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(yu("a",e,t,n),yu("b",e,t,n))];case"Less":return[r.less(yu("a",e,t,n),yu("b",e,t,n))];case"LessEqual":return[r.lessEqual(yu("a",e,t,n),yu("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(yu("a",e,t,n),yu("b",e,t,n))];case"LogicalNot":return[r.logicalNot(yu("a",e,t,n))];case"LogicalOr":return[r.logicalOr(yu("a",e,t,n),yu("b",e,t,n))];case"Select":case"SelectV2":return[r.where(yu("condition",e,t,n),yu("a",e,t,n),yu("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(yu("a",e,t,n),yu("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(yu("a",e,t,n),yu("b",e,t,n),yu("transposeA",e,t,n),yu("transposeB",e,t,n))];case"Einsum":return[r.einsum(yu("equation",e,t,n),...yu("tensors",e,t,n))];case"Transpose":return[r.transpose(yu("x",e,t,n),yu("perm",e,t,n))];case"_FusedMatMul":const[a,s]=yu("fusedOps",e,t,n),o="biasadd"===a,i="prelu"===s,u=yu("numArgs",e,t,n),l=yu("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,p]=yu("args",e,t,n);return[r.fused.matMul({a:yu("a",e,t,n),b:yu("b",e,t,n),transposeA:yu("transposeA",e,t,n),transposeB:yu("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(yu("a",e,t,n),yu("numLower",e,t,n),yu("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(yu("x",e,t,n),yu("axis",e,t,n),yu("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(yu("x",e,t,n),yu("mean",e,t,n),yu("variance",e,t,n),yu("offset",e,t,n),yu("scale",e,t,n),yu("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(yu("x",e,t,n),yu("radius",e,t,n),yu("bias",e,t,n),yu("alpha",e,t,n),yu("beta",e,t,n))];case"Softmax":return[r.softmax(yu("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(yu("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(yu("paramsNestedSplits",e,t,n),yu("paramsDenseValues",e,t,n),yu("indices",e,t,n),yu("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(yu("starts",e,t,n),yu("limits",e,t,n),yu("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(yu("shape",e,t,n),yu("values",e,t,n),yu("defaultValue",e,t,n),yu("rowPartitionTensors",e,t,n),yu("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Max":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.max(yu("x",e,t,n),a,s)]}case"Mean":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.mean(yu("x",e,t,n),a,s)]}case"Min":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.min(yu("x",e,t,n),a,s)]}case"Sum":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.sum(yu("x",e,t,n),a,s)]}case"All":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.all(yu("x",e,t,n),a,s)]}case"Any":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.any(yu("x",e,t,n),a,s)]}case"ArgMax":{const a=yu("axis",e,t,n);return[r.argMax(yu("x",e,t,n),a)]}case"ArgMin":{const a=yu("axis",e,t,n);return[r.argMin(yu("x",e,t,n),a)]}case"Prod":{const a=yu("axis",e,t,n),s=yu("keepDims",e,t,n);return[r.prod(yu("x",e,t,n),a,s)]}case"Cumprod":{const a=yu("axis",e,t,n),s=yu("exclusive",e,t,n),o=yu("reverse",e,t,n);return[r.cumprod(yu("x",e,t,n),a,s,o)]}case"Cumsum":{const a=yu("axis",e,t,n),s=yu("exclusive",e,t,n),o=yu("reverse",e,t,n);return[r.cumsum(yu("x",e,t,n),a,s,o)]}case"Bincount":const a=yu("x",e,t,n),s=yu("weights",e,t,n),o=yu("size",e,t,n);return[r.bincount(a,s,o)];case"DenseBincount":{const a=yu("x",e,t,n),s=yu("weights",e,t,n),o=yu("size",e,t,n),i=yu("binaryOutput",e,t,n);return[r.denseBincount(a,s,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=yu("n",e,t,n),s=yu("axis",e,t,n);let o=yu("tensors",e,t,n);return o=o.slice(0,a),[r.concat(o,s)]}case"Gather":{const a=yu("x",e,t,n),s=yu("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{const a=yu("axis",e,t,n),s=yu("batchDims",e,t,n),o=yu("x",e,t,n),i=yu("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),a,s)]}case"Reverse":{const a=yu("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);const o=yu("x",e,t,n);return[r.reverse(o,s)]}case"ReverseV2":{const a=yu("axis",e,t,n),s=yu("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{const a=yu("begin",e,t,n),s=yu("size",e,t,n);return[r.slice(yu("x",e,t,n),a,s)]}case"StridedSlice":{const a=yu("begin",e,t,n),s=yu("end",e,t,n),o=yu("strides",e,t,n),i=yu("beginMask",e,t,n),u=yu("endMask",e,t,n),l=yu("ellipsisMask",e,t,n),c=yu("newAxisMask",e,t,n),p=yu("shrinkAxisMask",e,t,n),h=yu("x",e,t,n);return[r.stridedSlice(h,a,s,o,i,u,l,c,p)]}case"Pack":return Nn((()=>{const a=yu("axis",e,t,n),s=yu("tensors",e,t,n),o=s[0].shape,i=r.squeeze(s[0]).shape,u=s.map((e=>{const t=D(e.shape,o);if(!t&&!D(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,a)]}));case"Unpack":{const a=yu("axis",e,t,n),s=yu("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{const a=yu("reps",e,t,n);return[r.tile(yu("x",e,t,n),a)]}case"Split":case"SplitV":{const a=yu("axis",e,t,n),s=yu("numOrSizeSplits",e,t,n),o=yu("x",e,t,n);return r.split(o,s,a)}case"ScatterNd":{const a=yu("indices",e,t,n),s=yu("values",e,t,n),o=yu("shape",e,t,n);return[r.scatterND(a,s,o)]}case"GatherNd":{const a=yu("x",e,t,n),s=yu("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{const a=yu("sparseIndices",e,t,n),s=yu("outputShape",e,t,n),o=yu("sparseValues",e,t,n),i=yu("defaultValue",e,t,n);return[r.sparseToDense(a,o,s,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const a=yu("indices",e,t,n),s=yu("values",e,t,n),o=yu("tensor",e,t,n);return[r.tensorScatterUpdate(o,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(yu("indices",e,t,n),yu("values",e,t,n),yu("denseShape",e,t,n),yu("defaultValue",e,t,n));return[a,s,o,i]}case"SparseReshape":{const{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(yu("inputIndices",e,t,n),yu("inputShape",e,t,n),yu("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(yu("data",e,t,n),yu("indices",e,t,n),yu("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(yu("data",e,t,n),yu("indices",e,t,n),yu("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"FFT":return[r.fft(yu("x",e,t,n))];case"IFFT":return[r.ifft(yu("x",e,t,n))];case"RFFT":return[r.rfft(yu("x",e,t,n))];case"IRFFT":return[r.irfft(yu("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(yu("input",e,t,n),yu("pattern",e,t,n),yu("rewrite",e,t,n),yu("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(yu("data",e,t,n),yu("dataSplits",e,t,n),yu("separator",e,t,n),yu("nGramWidths",e,t,n),yu("leftPad",e,t,n),yu("rightPad",e,t,n),yu("padWidth",e,t,n),yu("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{const{indices:a,values:s,shape:o}=r.string.stringSplit(yu("input",e,t,n),yu("delimiter",e,t,n),yu("skipEmpty",e,t,n));return[a,s,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(yu("input",e,t,n),yu("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=S)=>{switch(e.op){case"Cast":return[r.cast(yu("x",e,t,n),yu("dtype",e,t,n))];case"ExpandDims":{const a=yu("axis",e,t,n);return[r.expandDims(yu("x",e,t,n),a)]}case"Squeeze":{const a=yu("axis",e,t,n);return[r.squeeze(yu("x",e,t,n),a)]}case"Reshape":return[r.reshape(yu("x",e,t,n),yu("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(yu("x",e,t,n),yu("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(yu("x",e,t,n),yu("padding",e,t,n),yu("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(yu("x",e,t,n),yu("padding",e,t,n),yu("constantValue",e,t,n))];case"SpaceToBatchND":{const a=yu("blockShape",e,t,n),s=yu("paddings",e,t,n);return[r.spaceToBatchND(yu("x",e,t,n),a,s)]}case"BatchToSpaceND":{const a=yu("blockShape",e,t,n),s=yu("crops",e,t,n);return[r.batchToSpaceND(yu("x",e,t,n),a,s)]}case"DepthToSpace":{const a=yu("blockSize",e,t,n),s=yu("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(yu("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(yu("x",e,t,n),yu("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(yu("s0",e,t,n),yu("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=yu("keyDType",e,t,n),s=yu("valueDType",e,t,n),o=new ml(a,s);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=yu("tableHandle",e,t,n,r),s=yu("keys",e,t,n),o=yu("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=yu("tableHandle",e,t,n,r),s=yu("keys",e,t,n),o=yu("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=yu("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=gu(e.op);if(s&&s.customExecutor)return s.customExecutor(new sl(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return K(s)?s.then((e=>[].concat(e))):[].concat(s)}class gl{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function yl(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=new Set(Object.keys(e).map((e=>Nu(e)[0])));r=r||[];const c=new Set(r.map((e=>Nu(e.name)[0]))),p=[...t];for(;p.length>0;){const e=p.pop();(Nl(e)||Sl(e)||Tl(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}class bl extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const wl=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),vl=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),xl=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Nl(e){return wl.has(e.op)}function Sl(e){return vl.has(e.op)}function Tl(e){return xl.has(e.op)}class kl{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new kl(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=yl(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}const o=function(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>Nu(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...a,...e.weights,...s]).filter(o),l=i([...u,...Object.values(e.nodes)]).filter(o),c=new Map(l.map((e=>[e.name,e]))),p={};for(const e of l){p[e.name]=p[e.name]||0;for(const t of e.children)o(t)||(p[t.name]=Number.POSITIVE_INFINITY),p[t.name]=(p[t.name]||0)+1}const h=Object.entries(p).filter((([,e])=>0===e)).map((([e])=>e)),d=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const e of t.children.filter(o))0==--p[e.name]&&(d.push(e.name),h.push(e.name))}const m=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!a.has(e.name)&&(a.add(e.name),r.push(e.name))}return e.filter((e=>a.has(e.name)))}(d.map((e=>c.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(o)){if(!n.has(e.name))throw new bl(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new bl(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(const e of t.inputs){if(!n.has(e.name))throw new bl(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new bl(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(m,u),m}(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Nl(e)?n:t)),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let t=0;t<e.length;++t){const r=s[t];if(r===n)continue;const a=e[t],i=e[r];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Tn(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Nu(e)[0]])),a=t.map((e=>Nu(e)[0])),s=new Set(a);let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return Nn((()=>{const n=new gl(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,s]=Nu(t,n),o=[];o[s]=e[t],r[a]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(o))}));const a=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(r[e.name])continue;const t=fl(e,r,n,this._resourceManager);if(K(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,i.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>bu(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){if(!Nl(t)&&!s.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(Nl(e))continue;const t=wu(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function o(e){return Nl(e)||a.has(e.name)}if(!Nl(e)&&null!=s)for(const e of s){if(o(e))continue;const a=wu(e.name,t,n);for(const e of a)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const s=new gl(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>bu(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[Nu(e)[0]])),o=n.map((e=>Nu(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:p,syncInputs:h}=yl(e,u,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),m=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Nu(t),a=[];a[r]=e[t],m[n]=a}));const f={},g=this.getFrozenTensorIds(m),y={};for(;d.length>0;){const e=this.processStack(s,d,t,m,y,g,i,f,l);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!Nl(e)&&!bu(e.name,m,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return m}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&yu("isConstant",e.node,r,n)&&([c]=vu(e.node.name,n)),null==r[e.node.name]){const p=fl(e.node,r,n,this._resourceManager);c||([c]=vu(e.node.name,n));const h=n.currentContext;K(p)?l.push(p.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(p)),this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=vu(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!bu(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!bu(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Nu(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;A(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&A(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Nu(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Nu(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class El{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const _l="?tfjs-format=file",Al="model.json";class Il{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,n={},r=e){this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=r,null==n&&(this.loadOptions={}),this.resourceManager=new El}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return K(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new kl(Wu.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Wu.Instance.transformGraph(e.modelInitializer);this.initializer=new kl(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof je?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof je||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,o;const i=null===(o=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Sn(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ml(t,n={},r=e){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"==typeof t&&(t=function(e){return e.endsWith("/")||(e+="/"),`${e}${Al}${_l}`}(t));const a=new Il(t,n,r);return await a.load(),a}var Ol=function(){return Ol=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},Ol.apply(this,arguments)};function Dl(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function Cl(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var $l=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],Fl={modelType:"short",runtime:"mediapipe",maxFaces:1},Rl=function(){function e(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new k.FaceDetection({locateFile:function(t,n){if(e.solutionPath){var r=e.solutionPath.replace(/\/+$/,"");return"".concat(r,"/").concat(t)}return"".concat(n,"/").concat(t)}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults((function(e){if(t.height=e.image.height,t.width=e.image.width,t.faces=[],null!==e.detections)for(var n=0,r=e.detections;n<r.length;n++){var a=r[n];t.faces.push(t.normalizedToAbsolute(a.landmarks,{xMin:o=(s=a.boundingBox).xCenter-s.width/2,xMax:o+s.width,yMin:i=s.yCenter-s.height/2,yMax:i+s.height,width:s.width,height:s.height}))}var s,o,i}))}return e.prototype.normalizedToAbsolute=function(e,t){var n=this;return{keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,name:$l[t]}})),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},e.prototype.estimateFaces=function(e,t){return Dl(this,void 0,void 0,(function(){var n,r;return Cl(this,(function(a){switch(a.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof je?(r=ImageData.bind,[4,yr(e)]):[3,2];case 1:return n=new(r.apply(ImageData,[void 0,a.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,a.label=3;case 3:return e=n,[4,this.faceDetectorSolution.send({image:e})];case 4:return a.sent(),[2,this.faces]}}))}))},e.prototype.dispose=function(){this.faceDetectorSolution.close()},e.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},e.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},e}();function Bl(e){return Dl(this,void 0,void 0,(function(){var t,n;return Cl(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return Ol({},Fl);var t=Ol({},e);return t.runtime="mediapipe",null==t.modelType&&(t.modelType=Fl.modelType),null==t.maxFaces&&(t.maxFaces=Fl.maxFaces),t}(e),[4,(n=new Rl(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function Ll(e){return e instanceof je?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function zl(e){return e instanceof je?e:br(e)}function Pl(e,t){A(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),A(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function Vl(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var r=[],a=[],s=[],o=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var u=Ul(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),o.push(.1),o.push(u),o.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)s.push(e.aspectRatios[l]),o.push(u);if(e.interpolatedScaleAspectRatio>0){var c=i===e.strides.length-1?1:Ul(e.minScale,e.maxScale,i+1,e.strides.length);o.push(Math.sqrt(u*c)),s.push(e.interpolatedScaleAspectRatio)}}i++}for(var p=0;p<s.length;++p){var h=Math.sqrt(s[p]);r.push(o[p]/h),a.push(o[p]*h)}var d=0,m=0;if(e.featureMapHeight.length>0)d=e.featureMapHeight[n],m=e.featureMapWidth[n];else{var f=e.strides[n];d=Math.ceil(e.inputSizeHeight/f),m=Math.ceil(e.inputSizeWidth/f)}for(var g=0;g<d;++g)for(var y=0;y<m;++y)for(var b=0;b<r.length;++b){var w={xCenter:(y+e.anchorOffsetX)/m,yCenter:(g+e.anchorOffsetY)/d,width:0,height:0};e.fixedAnchorSize?(w.width=1,w.height=1):(w.width=a[b],w.height=r[b]),t.push(w)}n=i}return t}function Ul(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function jl(e,t){var n=t[0],r=t[1];return[n*e[0]+r*e[1]+e[3],n*e[4]+r*e[5]+e[7]]}function Wl(e,t,n,r){return Dl(this,void 0,void 0,(function(){var r,a,s,o,i;return Cl(this,(function(u){switch(u.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),r=zo(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),a=Lo(e.map((function(e){return e.score[0]}))),[4,uu.nonMaxSuppressionAsync(r,a,t,n)];case 1:return[4,(s=u.sent()).array()];case 2:return o=u.sent(),i=e.filter((function(e,t){return o.indexOf(t)>-1})),Sn([r,a,s]),[2,i]}}))}))}function ql(e,t,n){return Dl(this,void 0,void 0,(function(){var r,a,s,o,i;return Cl(this,(function(u){switch(u.label){case 0:return r=e[0],a=e[1],s=function(e,t,n){return Nn((function(){var r,a,s,o;n.reverseOutputOrder?(a=Co(qr(e,[0,n.boxCoordOffset+0],[-1,1])),r=Co(qr(e,[0,n.boxCoordOffset+1],[-1,1])),o=Co(qr(e,[0,n.boxCoordOffset+2],[-1,1])),s=Co(qr(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=Co(qr(e,[0,n.boxCoordOffset+0],[-1,1])),a=Co(qr(e,[0,n.boxCoordOffset+1],[-1,1])),s=Co(qr(e,[0,n.boxCoordOffset+2],[-1,1])),o=Co(qr(e,[0,n.boxCoordOffset+3],[-1,1]))),a=kn(An(_n(a,n.xScale),t.w),t.x),r=kn(An(_n(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=An(Pa(_n(s,n.hScale)),t.h),o=An(Pa(_n(o,n.wScale)),t.w)):(s=An(_n(s,n.hScale),t.h),o=An(_n(o,n.wScale),t.h));var i=Un(r,_n(s,2)),u=Un(a,_n(o,2)),l=kn(r,_n(s,2)),c=kn(a,_n(o,2)),p=Ur([zr(i,[n.numBoxes,1]),zr(u,[n.numBoxes,1]),zr(l,[n.numBoxes,1]),zr(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var h=0;h<n.numKeypoints;++h){var d=n.keypointCoordOffset+h*n.numValuesPerKeypoint,m=void 0,f=void 0;n.reverseOutputOrder?(m=Co(qr(e,[0,d],[-1,1])),f=Co(qr(e,[0,d+1],[-1,1]))):(f=Co(qr(e,[0,d],[-1,1])),m=Co(qr(e,[0,d+1],[-1,1])));var g=kn(An(_n(m,n.xScale),t.w),t.x),y=kn(An(_n(f,n.yScale),t.h),t.y);p=Ur([p,zr(g,[n.numBoxes,1]),zr(y,[n.numBoxes,1])],1)}return p}))}(a,t,n),o=Nn((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=aa(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=Wr(e)):e})),[4,Hl(s,o,n)];case 1:return i=u.sent(),Sn([s,o]),[2,i]}}))}))}function Hl(e,t,n){return Dl(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h,d,m;return Cl(this,(function(f){switch(f.label){case 0:return r=[],[4,e.data()];case 1:return a=f.sent(),[4,t.data()];case 2:for(s=f.sent(),o=0;o<n.numBoxes;++o)if(!(null!=n.minScoreThresh&&s[o]<n.minScoreThresh||(i=o*n.numCoords,u=Kl(a[i+0],a[i+1],a[i+2],a[i+3],s[o],n.flipVertically,o),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],p=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<p;h+=n.numValuesPerKeypoint)d=i+n.keypointCoordOffset+h,m={x:a[d+0],y:n.flipVertically?1-a[d+1]:a[d+1]},c.relativeKeypoints.push(m);r.push(u)}return[2,r]}}))}))}function Kl(e,t,n,r,a,s,o){return{score:[a],ind:o,locationData:{relativeBoundingBox:{xMin:t,yMin:s?1-n:e,xMax:r,yMax:s?1-e:n,width:r-t,height:n-e}}}}var Gl,Yl={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},Xl={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},Jl={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},Zl={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},Ql={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},ec={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},tc={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},nc=function(){function e(e,t,n){this.detectorModel=t,this.maxFaces=n,"full"===e?(this.imageToTensorConfig=tc,this.tensorsToDetectionConfig=Ql,this.anchors=Vl(Xl)):(this.imageToTensorConfig=ec,this.tensorsToDetectionConfig=Zl,this.anchors=Vl(Yl));var r=Lo(this.anchors.map((function(e){return e.width}))),a=Lo(this.anchors.map((function(e){return e.height}))),s=Lo(this.anchors.map((function(e){return e.xCenter}))),o=Lo(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:s,y:o,w:r,h:a}}return e.prototype.dispose=function(){this.detectorModel.dispose(),Sn([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){},e.prototype.detectFaces=function(e,t){return void 0===t&&(t=!1),Dl(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c,p,h;return Cl(this,(function(d){switch(d.label){case 0:return null==e?(this.reset(),[2,[]]):(n=Nn((function(){var n=wn(zl(e),"float32");return t&&(n=Co(uu.flipLeftRight(Va(n,0)),[0])),n})),r=function(e,t,n){var r=t.outputTensorSize,a=t.keepAspectRatio,s=t.borderMode,o=t.outputTensorFloatRange,i=Ll(e),u=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(i,n),l=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;Pl(t,"targetSize"),Pl(e,"roi");var s,o,i=r/a,u=e.height/e.width,l=0,c=0;return i>u?(s=e.width,o=e.width*i,c=(1-u/i)/2):(s=e.height/i,o=e.height,l=(1-i/u)/2),e.width=s,e.height=o,{top:c,left:l,right:l,bottom:c}}(u,r,a),c=function(e,t,n,r){var a=e.width,s=e.height,o=Math.cos(e.rotation),i=Math.sin(e.rotation),u=e.xCenter,l=e.yCenter,c=1/t,p=1/n,h=new Array(16);return h[0]=a*o*1*c,h[1]=-s*i*c,h[2]=0,h[3]=(-.5*a*o*1+.5*s*i+u)*c,h[4]=a*i*1*p,h[5]=s*o*p,h[6]=0,h[7]=(-.5*s*o-.5*a*i*1+l)*p,h[8]=0,h[9]=0,h[10]=a*c,h[11]=0,h[12]=0,h[13]=0,h[14]=0,h[15]=1,function(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}(h)}(u,i.width,i.height),p=Nn((function(){var t=zl(e),n=zo(function(e,t,n){return Pl(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}(c,i,r),[1,8]),a="zero"===s?"constant":"nearest",u=uu.transform(Va(wn(t,"float32")),n,"bilinear",a,0,[r.height,r.width]);return null!=o?function(e,t){var n=function(e,t,n,r){var a=(r-n)/255;return{scale:a,offset:n-0*a}}(0,0,t[0],t[1]);return Nn((function(){return kn(An(e,n.scale),n.offset)}))}(u,o):u}));return{imageTensor:p,padding:l,transformationMatrix:c}}(n,this.imageToTensorConfig),a=r.imageTensor,s=r.transformationMatrix,o=this.detectorModel.execute(a,"Identity:0"),i=function(e){return Nn((function(){var t=function(e){return Nn((function(){return[qr(e,[0,0,0],[1,-1,1]),qr(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],r=t[1];return{boxes:Co(r),logits:Co(n)}}))}(o),u=i.boxes,[4,ql([l=i.logits,u],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return 0===(c=d.sent()).length?(Sn([n,a,o,l,u]),[2,c]):[4,Wl(c,this.maxFaces,.3)];case 2:return p=d.sent(),h=function(e,t){void 0===e&&(e=[]);var n,r=(n=t,[].concat.apply([],n));return e.forEach((function(e){var t=e.locationData;t.relativeKeypoints.forEach((function(e){var t=jl(r,[e.x,e.y]),n=t[0],a=t[1];e.x=n,e.y=a}));var n=t.relativeBoundingBox,a=Number.MAX_VALUE,s=Number.MAX_VALUE,o=Number.MIN_VALUE,i=Number.MIN_VALUE;[[n.xMin,n.yMin],[n.xMin+n.width,n.yMin],[n.xMin+n.width,n.yMin+n.height],[n.xMin,n.yMin+n.height]].forEach((function(e){var t=jl(r,e),n=t[0],u=t[1];a=Math.min(a,n),o=Math.max(o,n),s=Math.min(s,u),i=Math.max(i,u)})),t.relativeBoundingBox={xMin:a,xMax:o,yMin:s,yMax:i,width:o-a,height:i-s}})),e}(p,s),Sn([n,a,o,l,u]),[2,h]}}))}))},e.prototype.estimateFaces=function(e,t){return Dl(this,void 0,void 0,(function(){var n,r;return Cl(this,(function(a){return n=Ll(e),r=!!t&&t.flipHorizontal,[2,this.detectFaces(e,r).then((function(e){return e.map((function(e){for(var t=e.locationData.relativeKeypoints.map((function(e,t){return Ol(Ol({},e),{x:e.x*n.width,y:e.y*n.height,name:$l[t]})})),r=e.locationData.relativeBoundingBox,a=0,s=["width","xMax","xMin"];a<s.length;a++)r[s[a]]*=n.width;for(var o=0,i=["height","yMax","yMin"];o<i.length;o++)r[i[o]]*=n.height;return{keypoints:t,box:r}}))}))]}))}))},e}();function rc(e){return Dl(this,void 0,void 0,(function(){var t,n,r;return Cl(this,(function(a){switch(a.label){case 0:return t=function(e){if(null==e)return Ol({},Jl);var t=Ol({},e);return null==t.modelType&&(t.modelType=Jl.modelType),null==t.maxFaces&&(t.maxFaces=Jl.maxFaces),null==t.detectorModelUrl&&("full"===t.modelType?t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,Ml(t.detectorModelUrl,{fromTFHub:n})];case 1:return r=a.sent(),[2,new nc(t.modelType,r,t.maxFaces)]}}))}))}(Gl||(Gl={})).MediaPipeFaceDetector="MediaPipeFaceDetector";var ac=function(){return ac=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},ac.apply(this,arguments)},sc=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},oc=function(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s&&(s=0,i[0]&&(o=0)),o;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){o.label=i[1];break}if(6===i[0]&&o.label<a[1]){o.label=a[1],a=i;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(i);break}a[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},ic=function(){function e(){this.mediaStream=null,this.scanFaceRunning=!1,this.currentFacingMode="environment",this.defaultGetImageOptions={enableFilePicker:!0,enableSwitchCamera:!0,enableAlert:!0,enableValidation:!1,ratio:.6,facingMode:"environment"},this.defaultGetVideoOptions={enableAlert:!0,enableSwitchCamera:!0,enableValidation:!0,facingMode:"user",ratio:1,recordMs:6e3}}return e.getCameraDevices=function(){return sc(this,void 0,void 0,(function(){var e;return oc(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,navigator.mediaDevices.enumerateDevices()];case 1:return[2,t.sent().filter((function(e){return"videoinput"===e.kind}))];case 2:return e=t.sent(),console.error(e),[2,[]];case 3:return[2]}}))}))},e.prototype.getImage=function(e){var t=this;return void 0===e&&(e={}),e=ac(ac({},this.defaultGetImageOptions),e),new Promise((function(n){var r,a=t.createBasicLayout(e);null===(r=a.querySelector(".ekyct-close-btn"))||void 0===r||r.addEventListener("click",(function(e){e.preventDefault(),t.closeEkycWindow(a),n(null)})),e.enableFilePicker&&t.handleFilePicker(a,"image/png,image/jpeg",(function(e){t.closeEkycWindow(a),n(e)})),t.handleCapture(a).then((function(e){e&&(t.closeEkycWindow(a),n(e))})),document.body.appendChild(a)}))},e.prototype.getVideo=function(e){var t=this;return void 0===e&&(e={}),e=ac(ac({},this.defaultGetVideoOptions),e),new Promise((function(n){var r,a,s=t.createBasicLayout(e);null===(r=s.querySelector(".ekyct-capture-region"))||void 0===r||r.classList.add("ekyct-hide-shader-border"),null===(a=s.querySelector(".ekyct-close-btn"))||void 0===a||a.addEventListener("click",(function(e){e.preventDefault(),t.closeEkycWindow(s),n(null)})),t.handleRecord(e,s).then((function(e){e&&(t.closeEkycWindow(s),n(e))})),document.body.appendChild(s)}))},e.prototype.handleFilePicker=function(e,t,n){var r,a=document.createElement("input");a.type="file",a.accept=t,a.onchange=function(){if(a.files){var e=a.files[0],t=e.name.match(/\.(png|jpg|jpeg)$/i);t&&t.length>0&&n({blob:e,contentName:"".concat(T.newGuid()).concat(t[0].toLowerCase()),contentLength:e.size,contentType:e.type})}},null===(r=e.querySelector(".ekyct-filepicker-btn"))||void 0===r||r.addEventListener("click",(function(e){e.preventDefault(),a.click()}))},e.prototype.handleRecord=function(e,t){var n=this;return new Promise((function(r,a){var s=t.querySelector(".ekyct-record-btn");if(s)if(e.enableValidation){var o=Gl.MediaPipeFaceDetector;T.toggleLoaderOnCaptureRegion(!0,t.querySelector(".ekyct-capture-region")),function(e,t){return Dl(this,void 0,void 0,(function(){var n,r;return Cl(this,(function(a){if(e===Gl.MediaPipeFaceDetector){if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,rc(n)];if("mediapipe"===n.runtime)return[2,Bl(n)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r))}throw new Error("".concat(e," is not a supported model name."))}))}))}(o,{runtime:"mediapipe",solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/face_detection"}).then((function(o){s.addEventListener("click",(function(s){return sc(n,void 0,void 0,(function(){return oc(this,(function(n){switch(n.label){case 0:return[4,this.handleClickRecord(s,r,a,e,t,o)];case 1:return[2,n.sent()]}}))}))}));var i=t.querySelector(".ekyct-footer");i&&n.enableFooterButtons(i),T.toggleLoaderOnCaptureRegion(!1,t.querySelector(".ekyct-capture-region"))}))}else s.addEventListener("click",(function(s){return sc(n,void 0,void 0,(function(){return oc(this,(function(n){switch(n.label){case 0:return[4,this.handleClickRecord(s,r,a,e,t)];case 1:return[2,n.sent()]}}))}))}));else a("Record button not exists!")}))},e.prototype.handleClickRecord=function(e,t,n,r,a,s){return sc(this,void 0,void 0,(function(){var o,i,u,l,c,p,h,d,m,f,g,y,b,w,v;return oc(this,(function(x){switch(x.label){case 0:if(e.preventDefault(),o=r.recordMs||6e3,this.disableFooterButtons(a.querySelector(".ekyct-footer")),!(i=a.querySelector("div.ekyct-capture-region")))return[3,17];if(u=[],c=0,p=0,h=0,!(d=(l=i).querySelector("canvas.ekyct-canvas")))return[3,15];m=d.captureStream(),f=void 0,this.scanFaceRunning=!0,x.label=1;case 1:if(!this.scanFaceRunning)return[3,14];x.label=2;case 2:return x.trys.push([2,9,,10]),this.handleScan(l),g=!0,r.enableValidation&&s?[4,this.handleDetectFace(l,s,r.enableAlert)]:[3,4];case 3:g=x.sent(),x.label=4;case 4:return g?(f||(h=0,p=0,c=0,u=[],(f=new MediaRecorder(m)).ondataavailable=function(e){return u.push(e.data)},f.start()),y=(new Date).getTime(),0===h&&(h=y),c=(b=(p=y-h)/o)>=1?100:Math.floor(100*b),[3,7]):[3,5];case 5:return[4,this.stopMediaRecorder(f)];case 6:x.sent(),h=0,p=0,c=0,u=[],f=void 0,x.label=7;case 7:return[4,T.delay(10)];case 8:return x.sent(),i.querySelectorAll(".ekyct-circle-region-point").forEach((function(e,t){t<c?e.classList.add("ekyct-circle-region-point--marked"):e.classList.remove("ekyct-circle-region-point--marked")})),[3,10];case 9:return w=x.sent(),console.error(w),[3,14];case 10:return o<=p?[4,this.stopMediaRecorder(f)]:[3,13];case 11:return x.sent(),this.clearMediaStream(m),[4,T.delay(250)];case 12:return x.sent(),[3,14];case 13:return[3,1];case 14:return this.scanFaceRunning=!1,u.length>0?(v=new Blob(u,{type:"video/webm"}),t({blob:v,contentLength:v.size,contentType:v.type,contentName:"".concat(T.newGuid(),".webm")})):t(null),[3,16];case 15:n("Canvas not exists!"),x.label=16;case 16:return[3,18];case 17:n("Capture region not exists!"),x.label=18;case 18:return[2]}}))}))},e.prototype.stopMediaRecorder=function(e){return sc(this,void 0,void 0,(function(){var t;return oc(this,(function(n){switch(n.label){case 0:return e?"recording"!==e.state?[3,2]:(t=function(){return new Promise((function(t,n){e.onstop=t,e.onerror=function(){return n("An error occured!")}}))},e.stop(),[4,t()]):[3,2];case 1:n.sent(),n.label=2;case 2:return[2]}}))}))},e.prototype.handleCapture=function(e){var t=this;return new Promise((function(n,r){var a=e.querySelector(".ekyct-capture-btn");a?a.addEventListener("click",(function(a){return sc(t,void 0,void 0,(function(){var t,s,o;return oc(this,(function(i){switch(i.label){case 0:return a.preventDefault(),(t=e.querySelector("div.ekyct-capture-region"))?(s=t,this.handleScan(s),[4,this.getObjectFromCaptureRegion(s)]):[3,2];case 1:return o=i.sent(),n(o?{blob:o,contentLength:o.size,contentName:"".concat(T.newGuid(),".png"),contentType:"image/png"}:null),[3,3];case 2:r("Capture region not exists!"),i.label=3;case 3:return[2]}}))}))})):r("Capture button not exists!")}))},e.prototype.getObjectFromCaptureRegion=function(e){return sc(this,void 0,void 0,(function(){var t;return oc(this,(function(n){switch(n.label){case 0:return(t=e.querySelector("canvas.ekyct-canvas"))?[4,this.getBlobFromCanvas(t)]:[3,2];case 1:return[2,n.sent()];case 2:return[2,null]}}))}))},e.prototype.getBlobFromCanvas=function(e){return new Promise((function(t){e.toBlob((function(e){return t(e)}))}))},e.prototype.handleDetectFace=function(t,n,r){return sc(this,void 0,void 0,(function(){var a,s,o,i,u,l,c,p;return oc(this,(function(h){switch(h.label){case 0:return(a=t.querySelector(".ekyct-canvas"))?(s=a,[4,n.estimateFaces(s)]):[3,2];case 1:if(1===(o=h.sent()).length&&(i=o[0],u=i.box.width,l=parseFloat(s.style.width.slice(0,-2)),(c=i.keypoints.find((function(e){return"noseTip"===e.name})))&&c.x&&c.y))return p=!0,u<.3*l&&(p=!1,r&&T.insertAlert(t,e.FACE_DETECTION_WARNING_02)),u>.6*l&&(p=!1,r&&T.insertAlert(t,e.FACE_DETECTION_WARNING_01)),(c.y<.35*l||c.y>.65*l||c.x<.35*l||c.x>.65*l)&&(p=!1,r&&T.insertAlert(t,e.FACE_DETECTION_WARNING_03)),p&&r&&T.cleanAlert(t),[2,p];h.label=2;case 2:return r&&T.insertAlert(t,e.FACE_DETECTION_WARNING_04),[2,!1]}}))}))},e.prototype.handleScan=function(e){var t=e.querySelector(".ekyct-shading"),n=e.querySelector(".ekyct-video"),r=e.querySelector(".ekyct-canvas");if(t&&n&&r){var a=n,s=t,o=r,i=a.videoWidth/a.clientWidth,u=a.videoHeight/a.clientHeight,l=parseFloat(s.style.borderLeftWidth.slice(0,-2)),c=parseFloat(s.style.borderTopWidth.slice(0,-2)),p=a.clientWidth-2*l,h=a.clientHeight-2*c,d=p*i,m=h*u,f=l*i,g=c*u,y=o.getContext("2d",{willReadFrequently:!0});y.canvas.width=p,y.canvas.height=h,y.drawImage(a,f,g,d,m,0,0,p,h)}},e.prototype.createBasicLayout=function(t){var n,r=this;this.validateEkycToolOptions(t);var a=document.createElement("div"),s=document.createElement("div");s.className="ekyct-container--inner",s.insertAdjacentHTML("beforeend",'<style>.ekyct-container,.ekyct-container *{margin:0;padding:0;box-sizing:border-box}.ekyct-container{position:fixed;top:0;left:0;background-color:#202124;z-index:999;height:100%;width:100%;font-family:Arial,Helvetica,sans-serif}.ekyct-container--inner{display:flex;flex-direction:column;width:100%;height:100%;position:absolute;top:0;left:0}.ekyct-container--rotate{flex-direction:row}.ekyct-container--rotate .ekyct-footer,.ekyct-container--rotate .ekyct-header,.ekyct-container--rotate .ekyct-video{width:unset;height:100%}.ekyct-container--rotate .ekyct-footer--inner,.ekyct-container--rotate .ekyct-header--inner{width:unset;height:100%;flex-direction:column-reverse}.ekyct-btn{border:none;outline:0;background-color:#3c4043;color:#fff;padding:16px;cursor:pointer;line-height:0;border-radius:50%}.ekyct-btn:hover{background-color:#4b5053}.ekyct-btn:active{background-color:#5a5f63}.ekyct-btn:disabled{background-color:#2b2d30;color:#727275}.ekyct-btn svg{fill:currentColor;width:28px;height:28px}.ekyct-capture-region{width:100%;min-height:100px;position:relative;flex-grow:1;display:flex;align-items:center;justify-content:center;overflow:hidden}.ekyct-capture-region.ekyct-hide-shading .ekyct-shading{display:none!important}.ekyct-hide-shader-border .ekyct-shading{overflow:hidden}.ekyct-circle-region{display:none}.ekyct-hide-shader-border .ekyct-circle-region{display:flex;width:100%;height:100%;justify-content:center;align-items:center;rotate:180deg;border-radius:50%;box-shadow:0 0 0 1000px rgba(0,0,0,.5)}.ekyct-circle-region-point{width:4px;height:16px;background-color:rgba(0,0,0,.5);position:absolute;border-radius:4px;transition:10ms ease-in-out}.ekyct-circle-region-point--marked{background-color:#0f0;box-shadow:0 0 10px #0f0}.ekyct-alert,.ekyct-shader-border{background-color:#fff;position:absolute}.ekyct-footer,.ekyct-header{width:100%}.ekyct-header--inner{width:100%;display:flex;justify-content:flex-end;padding:10px}.ekyct-header--inner .ekyct-btn{padding:6px}.ekyct-footer--inner{width:100%;display:flex;padding:20px;justify-content:center;gap:1rem}.ekyct-cam-error{width:100%;heigth:100%}.ekyct-cam-error--inner{width:100%;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:column}.ekyct-cam-error--inner p,.ekyct-cam-error--inner span{color:#ff5100;font-size:12px;text-align:center}.ekyct-cam-error--inner svg{fill:currentColor;width:100px;height:100px}.ekyct-shading{position:absolute;border-style:solid;border-color:rgba(0,0,0,.5)}.ekyct-video{width:100%;display:block}.ekyct-alert{top:10px;right:0;transform:translateX(100%);padding:8px 16px;border-radius:8px;border-style:solid;border-width:1px;font-weight:700;font-size:12px;transition:.2s ease-out;max-width:80%;text-align:left}.ekyct-alert.warning{border-color:#ffae00;color:#ffae00}.ekyct-alert.active{right:10px;transform:translateX(0);z-index:10}.ekyct-loader{position:absolute;top:0;left:0;right:0;bottom:0;background-color:rgba(0,0,0,.5);display:flex;align-items:center;justify-content:center;z-index:100}.ekyct-loader-content{position:relative;width:48px;height:48px}.ekyct-loader-content span{position:absolute;top:0;left:0;width:100%;height:100%;transform:rotate(calc(36deg * var(--i)))}.ekyct-loader-content span::before{content:"";position:absolute;top:0;left:0;width:12px;height:12px;border-radius:50%;background-color:rgba(254,254,254,.8);transform:scale(0);animation:1s linear infinite loaderAnimate;animation-delay:calc(.1s * var(--i))}@keyframes loaderAnimate{0%{transform:scale(1)}100%,80%{transform:scale(0)}}@media (min-width:768px){.ekyct-alert,.ekyct-cam-error--inner p,.ekyct-cam-error--inner span{font-size:14px}.ekyct-container--inner{max-width:576px;left:50%;transform:translateX(-50%)}.ekyct-alert{padding:10px 20px}.ekyct-cam-error--inner svg{width:140px;height:140px}.ekyct-loader-content{width:54px;height:54px}.ekyct-loader-content span::before{width:14px;height:14px}}@media (min-width:992px){.ekyct-container--inner{max-width:768px}.ekyct-loader-content{width:60px;height:60px}.ekyct-loader-content span::before{width:16px;height:16px}}</style>'),a.className="ekyct-container";var o=document.createElement("div");o.dataset.ratio=null===(n=t.ratio)||void 0===n?void 0:n.toString(),o.className="ekyct-capture-region";var i=this.createFooter(t);return s.appendChild(this.createHeader()),s.appendChild(o),s.appendChild(i),a.appendChild(s),e.getCameraDevices().then((function(e){var n,a,u,l,c=e.length;t.enableSwitchCamera&&c>1?null===(n=i.querySelector(".ekyct-switchcam-btn"))||void 0===n||n.addEventListener("click",(function(e){e.preventDefault(),r.disableFooterButtons(i),r.toggleFacingMode(),r.insertVideoElement(o,c,r.currentFacingMode).then((function(){r.enableFooterButtons(i)}))})):null===(a=i.querySelector(".ekyct-switchcam-btn"))||void 0===a||a.remove(),c>0?(r.disableFooterButtons(i),r.insertVideoElement(o,c,t.facingMode).then((function(){T.handleScreen(s),t.enableValidation||r.enableFooterButtons(i)}))):(null===(u=i.querySelector(".ekyct-capture-btn"))||void 0===u||u.remove(),null===(l=i.querySelector(".ekyct-record-btn"))||void 0===l||l.remove(),o.appendChild(r.createNotHasCamElement()))})),a},e.prototype.enableFooterButtons=function(e){var t=e.querySelector(".ekyct-switchcam-btn"),n=e.querySelector(".ekyct-capture-btn"),r=e.querySelector(".ekyct-record-btn");t&&(t.disabled=!1),n&&(n.disabled=!1),r&&(r.disabled=!1)},e.prototype.disableFooterButtons=function(e){var t=e.querySelector(".ekyct-switchcam-btn"),n=e.querySelector(".ekyct-capture-btn"),r=e.querySelector(".ekyct-record-btn");t&&(t.disabled=!0),n&&(n.disabled=!0),r&&(r.disabled=!0)},e.prototype.toggleFacingMode=function(){this.currentFacingMode="environment"===this.currentFacingMode?"user":"environment"},e.prototype.validateEkycToolOptions=function(e){e.enableSwitchCamera||(e.enableSwitchCamera=!1),e.enableAlert||(e.enableAlert=!1),e.enableValidation||(e.enableValidation=!1),e.ratio||(e.ratio=0),e.facingMode||(e.facingMode="environment")},e.prototype.createNotHasCamElement=function(){var t=document.createElement("div");t.className="ekyct-cam-error";var n=document.createElement("div");n.className="ekyct-cam-error--inner";var r=document.createElement("p");r.innerHTML='<svg viewBox="0 0 24 24"><path d="M12 5.99 19.53 19H4.47L12 5.99M12 2 1 21h22L12 2z"></path><path d="M13 16h-2v2h2zm0-6h-2v5h2z"></path></svg>';var a=document.createElement("p");return a.innerText=e.CAMERA_NOT_FOUND_WARNING,n.append(r,a),t.appendChild(n),t},e.prototype.insertVideoElement=function(e,t,n){var r;return void 0===n&&(n="environment"),sc(this,void 0,void 0,(function(){var a,s;return oc(this,(function(o){switch(o.label){case 0:return t>0?(a=this.currentFacingMode===n||t>1?n:this.currentFacingMode,this.clearMediaStream(this.mediaStream),null===(r=e.querySelector(".ekyct-video"))||void 0===r||r.remove(),[4,this.createVideoElement({facingMode:a})]):[3,2];case 1:return s=o.sent(),this.currentFacingMode=a,e.appendChild(s),[2,{videoWidth:s.clientWidth,videoHeight:s.clientHeight}];case 2:return[2,null]}}))}))},e.prototype.closeEkycWindow=function(e){this.clearMediaStream(this.mediaStream),this.scanFaceRunning=!1,document.body.contains(e)&&document.body.removeChild(e)},e.prototype.clearMediaStream=function(e){e&&e.getTracks().forEach((function(t){null==e||e.removeTrack(t),t.stop()}))},e.prototype.createHeader=function(){var e=document.createElement("div");e.className="ekyct-header";var t=document.createElement("div");t.className="ekyct-header--inner";var n=document.createElement("button");return n.className="ekyct-btn ekyct-close-btn",n.innerHTML='<svg viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>',t.appendChild(n),e.appendChild(t),e},e.prototype.createFooter=function(e){var t=document.createElement("div");t.className="ekyct-footer";var n=document.createElement("div");if(n.className="ekyct-footer--inner",e.enableFilePicker){var r=document.createElement("button");r.className="ekyct-btn ekyct-filepicker-btn",r.innerHTML='<svg viewBox="0 0 24 24"><path d="M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z"></path></svg>',n.appendChild(r)}if(this.instanceOfCaptureEkycToolOptions(e)){var a=document.createElement("button");a.className="ekyct-btn ekyct-capture-btn",a.innerHTML='<svg viewBox="0 0 24 24"><circle cx="12" cy="12" r="3.2"></circle><path d="M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"></path></svg>',n.appendChild(a)}else{var s=document.createElement("button");s.className="ekyct-btn ekyct-record-btn",s.innerHTML='<svg viewBox="0 0 24 24"><path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"></path></svg>',n.appendChild(s)}if(e.enableSwitchCamera){var o=document.createElement("button");o.className="ekyct-btn ekyct-switchcam-btn",o.innerHTML='<svg viewBox="0 0 24 24"><path d="M16 7h-1l-1-1h-4L9 7H8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-4 7c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"></path><path d="m8.57.51 4.48 4.48V2.04c4.72.47 8.48 4.23 8.95 8.95h2C23.34 3.02 15.49-1.59 8.57.51zm2.38 21.45c-4.72-.47-8.48-4.23-8.95-8.95H0c.66 7.97 8.51 12.58 15.43 10.48l-4.48-4.48v2.95z"></path></svg>',n.appendChild(o)}return t.appendChild(n),t},e.prototype.instanceOfCaptureEkycToolOptions=function(e){return"enableFilePicker"in e},e.prototype.createVideoElement=function(e){var t=this;return new Promise((function(n){var r=document.createElement("video");r.className="ekyct-video",r.muted=!0,r.setAttribute("muted","true"),r.playsInline=!0;var a=function(){r.removeEventListener("playing",a),n(r)};r.addEventListener("playing",a);var s={audio:!1,video:e};navigator.mediaDevices.getUserMedia(s).then((function(e){t.mediaStream=e,r.srcObject=e,r.play()}))}))},e.FACE_DETECTION_WARNING_01="Vui lòng đưa camera ra xa một chút!",e.FACE_DETECTION_WARNING_02="Vui lòng đưa camera lại gần một chút!",e.FACE_DETECTION_WARNING_03="Vui lòng đưa khuôn mặt vào giữa vùng chọn!",e.FACE_DETECTION_WARNING_04="Không thể phát hiện khuôn mặt trong vùng chọn!",e.CAMERA_NOT_FOUND_WARNING="Không thể tìm thấy máy ảnh trên thiết bị của bạn!",e}();window.addEventListener("resize",(function(){document.querySelectorAll("div.ekyct-container--inner").forEach((function(e){T.handleScreen(e)}))}))})(),__EkycToolsLibrary__=r})();if(window){if(!EkycTools){var EkycTools=window.__EkycToolsLibrary__.EkycTools}}